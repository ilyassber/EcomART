{"version":3,"file":"static/webpack/static\\development\\pages\\maker.js.5c9b0895d8c572821b42.hot-update.js","sources":["webpack:///./components/elements/product/AddProduct.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { TxtField, TxtArea, IntField } from '../../graphics/textFields'\r\nimport { BtnBbw } from '../../graphics/buttons'\r\nimport AddImageGrid from '../../widgets/image/AddImageGrid'\r\nimport { uploadImage } from '../../../services/api/uploadImage'\r\nimport { addProduct } from '../../../services/api/addProduct'\r\nimport AddCategory from '../../widgets/category/AddCategory'\r\n\r\nconst AddProduct = props => {\r\n\r\n    let data = {}\r\n    data['pics_list'] = []\r\n    data['tags'] = []\r\n    const [files, setFiles] = useState([])\r\n    const [categories, setCategories] = useState([])\r\n\r\n    const getValue = (event, access) => {\r\n        if (access == 'name') {\r\n            data['name'] = event.target.value\r\n        } else if (access == 'description') {\r\n            data['description'] = event.target.value\r\n        } else if (access == 'price') {\r\n            data['price'] = event.target.value\r\n        } else if (access == 'quantity') {\r\n            data['quantity'] = event.target.value\r\n        }\r\n    }\r\n\r\n    const appendFile = (newFiles) => {\r\n        newFiles.forEach((f) => files.push(f), this)\r\n    }\r\n\r\n    const removeFile = (index) => {\r\n        files.splice(index, 1)\r\n    }\r\n\r\n    const appendCategory = (category) => {\r\n        categories.splice(category.lvl, 0, category)\r\n    }\r\n\r\n    const removeCategory = (index) => {\r\n        categories.splice(index, (categories.length - index))\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        for (let i = 0; i < files.length; i++) {\r\n            let response = await uploadImage(event, files[0], props.cookies['csrftoken']).then((res) => res)\r\n            data['pics_list'].push(response.data)\r\n        }\r\n        for (let i = 0; i < categories.length; i++) {\r\n            data['tags'].push(categories[i].id)\r\n        }\r\n        console.log(data)\r\n        addProduct(data, props.cookies['csrftoken']).then((res) => {\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n    let content = (\r\n        <div className=\"m-4\">\r\n            <form className=\"\" action=\"\">\r\n                <TxtField label=\"Product Name\" onChange={(event) => getValue(event, 'name')} />\r\n                <TxtArea label=\"Product Description\" onChange={(event) => getValue(event, 'description')} />\r\n                <TxtField label=\"Product Region\" onChange={(event) => getValue(event, 'region')} />\r\n                <IntField label=\"Price\" onChange={(event) => getValue(event, 'price')} />\r\n                <IntField label=\"Quantity\" onChange={(event) => getValue(event, 'quantity')} />\r\n                <AddCategory categories={categories} addCategory={appendCategory} removeCategory={removeCategory} csrftoken={props.cookies['csrftoken']}/>\r\n                <AddImageGrid files={files} addImage={appendFile} removeImage={removeFile}/>\r\n                <BtnBbw className=\"w-full h-12 mt-8 mb-4\" value=\"ADD PRODUCT\" onClick={handleSubmit} />\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default AddProduct"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AALA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAJA;AAGA;AACA;AACA;AALA;AAEA;AAFA;AAAA;AACA;AADA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcsourceRoot":""}