{"version":3,"file":"static/webpack/static\\development\\pages\\maker.js.ef9d562707d25ea81698.hot-update.js","sources":["webpack:///./components/graphics/category/SelectCategory.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { getCategories } from '../../../services/api/fetch/getCategories'\r\n\r\nconst SelectCategory = props => {\r\n\r\n    const forceUpdate = React.useReducer(() => ({}))[1]\r\n    const selectedRef = useRef()\r\n    const [data, setData] = useState()\r\n    let currentLvl = null\r\n    let currentParent = null\r\n    let content = null\r\n\r\n    const getData = () => {\r\n        setData(null)\r\n        getCategories(currentLvl, props.parent, props.csrftoken).then((res) => {\r\n            console.log(currentLvl)\r\n            console.log(res)\r\n            setData(JSON.stringify(res))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        currentLvl = props.lvl\r\n        currentParent = props.parent\r\n        getData()\r\n    }, [])\r\n\r\n    if (data && JSON.parse(data).length > 0) {\r\n        const options = JSON.parse(data).map((option) => {\r\n            return <option key={option.id} value={option.name} />\r\n        })\r\n\r\n        const getOption = () => {\r\n            let value = selectedRef.current.value\r\n            JSON.parse(data).map((option) => {\r\n                if (option.name == value) {\r\n                    props.setCategory(option)\r\n                    currentLvl = option.lvl + 1\r\n                    getData()\r\n                    //selectedRef.current.value = ''\r\n                    //forceUpdate()\r\n                }\r\n            })\r\n        }\r\n\r\n        content = (\r\n            <div className={props.className}>\r\n                <div className=\"h-8 flex\">\r\n                <div className=\"h-full w-auto content-center mx-auto flex flex-wrap font-sans font-bold\">\r\n                    <b className=\"text-gray-900 text-sm text-center ml-2 mr-2\">&#8250;</b>\r\n                </div>\r\n                <div>\r\n                <input\r\n                    className=\"h-8 w-auto font-sans font-medium border text-gray-700 leading-tight hover:outline-none focus:outline-none p-1\"\r\n                    ref={selectedRef}\r\n                    list=\"data\"\r\n                    onChange={getOption} />\r\n                <datalist id=\"data\">\r\n                    {options}\r\n                </datalist>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return content\r\n}\r\n\r\nexport default SelectCategory"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}