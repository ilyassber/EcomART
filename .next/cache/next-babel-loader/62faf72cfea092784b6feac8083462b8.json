{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\elements\\\\product\\\\AddProduct.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { TxtField, TxtArea, IntField } from '../../graphics/textFields';\nimport { BtnBbw } from '../../graphics/buttons';\nimport AddImageGrid from '../../widgets/image/AddImageGrid';\nimport uploadImage from '../../../services/api/uploadImage';\n\nconst AddProduct = props => {\n  let data = {};\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n\n  const getValue = (event, access) => {\n    if (access == 'name') {\n      data['name'] = event.target.value;\n    } else if (access == 'description') {\n      data['description'] = event.target.value;\n    } else if (access == 'price') {\n      data['price'] = event.target.value;\n    } else if (access == 'quantity') {\n      data['quantity'] = event.target.value;\n    }\n  };\n\n  const appendFile = newFiles => {\n    newFiles.forEach(f => files.push(f), this);\n  };\n\n  const removeFile = index => {\n    files.splice(index, 1);\n  };\n\n  const handleSubmit = event => {};\n\n  let content = __jsx(\"div\", {\n    className: \"m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    className: \"\",\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(TxtField, {\n    label: \"Product Name\",\n    onChange: event => getValue(event, 'name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), __jsx(TxtArea, {\n    label: \"Product Description\",\n    onChange: event => getValue(event, 'description'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), __jsx(IntField, {\n    label: \"Price\",\n    onChange: event => getValue(event, 'price'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), __jsx(IntField, {\n    label: \"Quantity\",\n    onChange: event => getValue(event, 'quantity'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), __jsx(AddImageGrid, {\n    files: files,\n    addImage: appendFile,\n    removeImage: removeFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), __jsx(BtnBbw, {\n    className: \"w-full h-12 mt-8 mb-4\",\n    value: \"ADD PRODUCT\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })));\n\n  return content;\n};\n\nexport default AddProduct;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/elements/product/AddProduct.js"],"names":["React","useState","TxtField","TxtArea","IntField","BtnBbw","AddImageGrid","uploadImage","AddProduct","props","data","files","setFiles","getValue","event","access","target","value","appendFile","newFiles","forEach","f","push","removeFile","index","splice","handleSubmit","content"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { TxtField, TxtArea, IntField } from '../../graphics/textFields'\r\nimport { BtnBbw } from '../../graphics/buttons'\r\nimport AddImageGrid from '../../widgets/image/AddImageGrid'\r\nimport uploadImage from '../../../services/api/uploadImage'\r\n\r\nconst AddProduct = props => {\r\n\r\n    let data = {}\r\n    const [files, setFiles] = useState([])\r\n\r\n    const getValue = (event, access) => {\r\n        if (access == 'name') {\r\n            data['name'] = event.target.value\r\n        } else if (access == 'description') {\r\n            data['description'] = event.target.value\r\n        } else if (access == 'price') {\r\n            data['price'] = event.target.value\r\n        } else if (access == 'quantity') {\r\n            data['quantity'] = event.target.value\r\n        }\r\n    }\r\n\r\n    const appendFile = (newFiles) => {\r\n        newFiles.forEach((f) => files.push(f), this)\r\n    }\r\n\r\n    const removeFile = (index) => {\r\n        files.splice(index, 1)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n    }\r\n\r\n    let content = (\r\n        <div className=\"m-4\">\r\n            <form className=\"\" action=\"\">\r\n                <TxtField label=\"Product Name\" onChange={(event) => getValue(event, 'name')} />\r\n                <TxtArea label=\"Product Description\" onChange={(event) => getValue(event, 'description')} />\r\n                <IntField label=\"Price\" onChange={(event) => getValue(event, 'price')} />\r\n                <IntField label=\"Quantity\" onChange={(event) => getValue(event, 'quantity')} />\r\n                <AddImageGrid files={files} addImage={appendFile} removeImage={removeFile}/>\r\n                <BtnBbw className=\"w-full h-12 mt-8 mb-4\" value=\"ADD PRODUCT\" onClick={handleSubmit} />\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default AddProduct"]},"metadata":{},"sourceType":"module"}