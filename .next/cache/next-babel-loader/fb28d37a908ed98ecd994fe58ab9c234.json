{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\n\nconst Btn = props => {\n  let borderColor = 'black';\n  let textColor = 'white';\n  let textSize = 'sm';\n  let textWeight = 'medium';\n  let hoverColor = 'gray-700';\n  let borderHoverColor = 'white';\n  let bgColor = 'black';\n  let disableColor = 'gray-300';\n  let disabled = false;\n  let height = 12;\n  let shadow = 'border border-';\n\n  if (props.height != null) {\n    height = props.height;\n  }\n\n  if (props.borderColor != null) {\n    borderColor = props.borderColor;\n  }\n\n  if (props.borderHoverColor != null) {\n    borderHoverColor = props.borderHoverColor;\n  }\n\n  if (props.textColor != null) {\n    textColor = props.textColor;\n  }\n\n  if (props.textSize != null) {\n    textSize = props.textSize;\n  }\n\n  if (props.hoverColor != null) {\n    hoverColor = props.hoverColor;\n  }\n\n  if (props.bgColor != null) {\n    bgColor = props.bgColor;\n  }\n\n  if (props.disableColor != null) {\n    disableColor = props.disableColor;\n  }\n\n  if (props.shadow == true) {\n    shadow = 'shadow';\n    borderColor = '';\n  }\n\n  if (props.textWeight != null) {\n    textWeight = props.textWeight;\n  }\n\n  if (props.disabled != null) {\n    disabled = props.disabled;\n  }\n\n  if (props.disabled == true) {\n    bgColor = disableColor;\n  }\n\n  const content = __jsx(\"div\", {\n    className: props.className\n  }, __jsx(\"button\", {\n    className: 'w-full h-full bg-' + bgColor + ' ' + shadow + ' hover:bg-' + hoverColor + ' focus:outline-none hover:border-' + borderHoverColor + ' font-roboto font-' + textWeight + ' text-' + textColor + ' text-' + textSize + ' py-2 px-4',\n    type: \"button\",\n    disabled: disabled,\n    onClick: props.onClick\n  }, props.value));\n\n  return content;\n};\n\nexport default Btn;","map":null,"metadata":{},"sourceType":"module"}