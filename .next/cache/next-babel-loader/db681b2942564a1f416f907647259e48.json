{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\ecomartwebapp\\\\pages\\\\user\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { parseCookies } from '../../lib/parseCookies';\n\nvar UserPage = function UserPage(_ref) {\n  var _ref$cookies = _ref.cookies,\n      cookies = _ref$cookies === void 0 ? {} : _ref$cookies;\n  console.log(cookies);\n\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  useEffect(function () {\n    console.log('useEffect runs');\n    setIsLoading(true);\n    axios.get('http://localhost:8000/products/').then(function (res) {\n      console.log(res.data);\n      setData(JSON.stringify(res.data));\n      setIsLoading(false);\n    });\n  }, []);\n\n  var content = __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Loading characters...\");\n\n  if (!isLoading && data && data.length > 0) {\n    console.log(data);\n    content = __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, data);\n  } else if (!isLoading && (!data || data.length === 0)) {\n    content = __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, \"Could not fetch any data.\");\n  }\n\n  return content;\n};\n\nUserPage.getInitialProps = function (_ref2) {\n  var req = _ref2.req;\n  var cookies = parseCookies(req);\n  return {\n    cookies: cookies\n  };\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/ecomartwebapp/pages/user/index.js"],"names":["React","useState","useEffect","axios","parseCookies","UserPage","cookies","console","log","data","setData","isLoading","setIsLoading","get","then","res","JSON","stringify","content","length","getInitialProps","req"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqB;AAAA,0BAAlBC,OAAkB;AAAA,MAAlBA,OAAkB,6BAAR,EAAQ;AAEpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAFoC,kBAIZL,QAAQ,EAJI;AAAA,MAI7BQ,IAJ6B;AAAA,MAIvBC,OAJuB;;AAAA,mBAKFT,QAAQ,CAAC,KAAD,CALN;AAAA,MAK7BU,SAL6B;AAAA,MAKlBC,YALkB;;AAOpCV,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAU,iCAAV,EACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACXR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACN,IAAhB;AACAC,MAAAA,OAAO,CAACM,IAAI,CAACC,SAAL,CAAeF,GAAG,CAACN,IAAnB,CAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH;AAMD,GATQ,EASN,EATM,CAAT;;AAWA,MAAIM,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAd;;AAEA,MAAI,CAACP,SAAD,IAAcF,IAAd,IAAsBA,IAAI,CAACU,MAAL,GAAc,CAAxC,EAA2C;AACzCZ,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACAS,IAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,IADH,CADF;AAKD,GAPD,MAOO,IAAI,CAACE,SAAD,KAAe,CAACF,IAAD,IAASA,IAAI,CAACU,MAAL,KAAgB,CAAxC,CAAJ,EAAgD;AACrDD,IAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAV;AACD;;AACD,SAAOA,OAAP;AACD,CA/BD;;AAiCAb,QAAQ,CAACe,eAAT,GAA2B,iBAAa;AAAA,MAAVC,GAAU,SAAVA,GAAU;AACtC,MAAMf,OAAO,GAAGF,YAAY,CAACiB,GAAD,CAA5B;AAEA,SAAO;AACLf,IAAAA,OAAO,EAAEA;AADJ,GAAP;AAGD,CAND;;AAQA,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { parseCookies } from '../../lib/parseCookies'\n\nconst UserPage = ({ cookies = {}}) => {\n\n  console.log(cookies)\n\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    console.log('useEffect runs');\n    setIsLoading(true);\n    axios.get('http://localhost:8000/products/')\n      .then(res => {\n        console.log(res.data)\n        setData(JSON.stringify(res.data));\n        setIsLoading(false);\n      })\n  }, []);\n\n  let content = <p>Loading characters...</p>;\n\n  if (!isLoading && data && data.length > 0) {\n    console.log(data)\n    content = (\n      <p>\n        {data}\n      </p>\n    );\n  } else if (!isLoading && (!data || data.length === 0)) {\n    content = <p>Could not fetch any data.</p>;\n  }\n  return content;\n};\n\nUserPage.getInitialProps = ({ req }) => {\n  const cookies = parseCookies(req);\n\n  return {\n    cookies: cookies\n  };\n};\n\nexport default UserPage;"]},"metadata":{},"sourceType":"module"}