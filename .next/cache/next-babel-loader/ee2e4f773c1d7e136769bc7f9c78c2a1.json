{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\graphics\\\\textFields\\\\TxtField.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useRef } from 'react';\n\nvar TxtField = function TxtField(props) {\n  var inputRef = useRef();\n  var align = 'left';\n  var color = 'gray-900';\n  var borderColor = 'gray-300';\n  var textColor = 'gray-700';\n  var placeholder = '';\n  var height = 12;\n  var shadow = 'border border-';\n\n  if (props.align != null) {\n    align = props.align;\n  }\n\n  if (props.color != null) {\n    color = props.color;\n  }\n\n  if (props.height != null) {\n    height = props.height;\n  }\n\n  if (props.borderColor != null) {\n    borderColor = props.borderColor;\n  }\n\n  if (props.textColor != null) {\n    textColor = props.textColor;\n  }\n\n  if (props.error == true) {\n    borderColor = 'red-600';\n    color = 'red-600';\n  }\n\n  if (props.reset == true) {\n    if (props.color != null) {\n      color = props.color;\n    } else {\n      color = 'white';\n    }\n\n    if (props.borderColor != null) {\n      borderColor = props.borderColor;\n    } else {\n      borderColor = 'gray-300';\n    }\n\n    if (props.textColor != null) {\n      textColor = props.textColor;\n    } else {\n      textColor = 'gray-700';\n    }\n\n    inputRef.current.value = '';\n  }\n\n  if (props.placeholder != null) {\n    placeholder = props.placeholder;\n  }\n\n  if (props.shadow == true) {\n    shadow = 'shadow';\n    borderColor = '';\n  }\n\n  var content = __jsx(\"div\", {\n    className: props.className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, props.label != null ? __jsx(\"label\", {\n    className: 'w-full block mb-1 font-sans font-medium' + ' text-' + color + ' text-' + align,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }\n  }, props.label) : null, __jsx(\"input\", {\n    ref: inputRef,\n    placeholder: placeholder,\n    className: 'appearance-none ' + shadow + borderColor + ' w-full h-' + height + ' py-2 px-3 font-sans font-medium text-gray-700 leading-tight focus:outline-none focus:border-black',\n    type: \"text\",\n    onChange: props.onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }));\n\n  return content;\n};\n\nexport default TxtField;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/graphics/textFields/TxtField.js"],"names":["useEffect","useRef","TxtField","props","inputRef","align","color","borderColor","textColor","placeholder","height","shadow","error","reset","current","value","content","className","label","onChange"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from 'react'\r\n\r\nconst TxtField = props => {\r\n\r\n    const inputRef = useRef()\r\n\r\n    let align = 'left'\r\n    let color = 'gray-900'\r\n    let borderColor = 'gray-300'\r\n    let textColor = 'gray-700'\r\n    let placeholder = ''\r\n    let height = 12\r\n    let shadow = 'border border-'\r\n\r\n    if (props.align != null) {\r\n        align = props.align\r\n    }\r\n\r\n    if (props.color != null) {\r\n        color = props.color\r\n    }\r\n\r\n    if (props.height != null) {\r\n        height = props.height\r\n    }\r\n\r\n    if (props.borderColor != null) {\r\n        borderColor = props.borderColor\r\n    }\r\n\r\n    if (props.textColor != null) {\r\n        textColor = props.textColor\r\n    }\r\n\r\n    if (props.error == true) {\r\n        borderColor = 'red-600'\r\n        color = 'red-600'\r\n    }\r\n\r\n    if (props.reset == true) {\r\n        if (props.color != null) {\r\n            color = props.color\r\n        } else {\r\n            color = 'white'\r\n        }\r\n        if (props.borderColor != null) {\r\n            borderColor = props.borderColor\r\n        } else {\r\n            borderColor = 'gray-300'\r\n        }\r\n        if (props.textColor != null) {\r\n            textColor = props.textColor\r\n        } else {\r\n            textColor = 'gray-700'\r\n        }\r\n        inputRef.current.value = ''\r\n    }\r\n\r\n    if (props.placeholder != null) {\r\n        placeholder = props.placeholder\r\n    }\r\n\r\n    if (props.shadow == true) {\r\n        shadow = 'shadow'\r\n        borderColor = ''\r\n    }\r\n\r\n    let content = (\r\n        <div className={props.className}>\r\n            {(props.label != null)\r\n            ? (<label className={'w-full block mb-1 font-sans font-medium' + ' text-' + color + ' text-' + align}>{props.label}</label>)\r\n            : null}\r\n            <input\r\n                ref={inputRef}\r\n                placeholder={placeholder}\r\n                className={'appearance-none ' + shadow + borderColor + ' w-full h-' + height + ' py-2 px-3 font-sans font-medium text-gray-700 leading-tight focus:outline-none focus:border-black'}\r\n                type=\"text\"\r\n                onChange={props.onChange}\r\n            />\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default TxtField"]},"metadata":{},"sourceType":"module"}