{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\elements\\\\article\\\\AddArticle.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { TxtField, TxtArea } from '../../graphics/textFields';\nimport { BtnBbw } from '../../graphics/buttons';\nimport { uploadImage } from '../../../services/api/uploadImage';\nimport { AddContent } from '../../widgets/article';\nimport AddSingleImage from '../../widgets/image/AddSingleImage';\nimport AddText from '../../widgets/article/AddText';\nimport querystring from 'querystring';\nimport { postRequest } from '../../../services/api/post/postRequest';\nimport AddArticleCategory from '../../widgets/category/AddArticleCategory';\n\nvar AddArticle = function AddArticle(props) {\n  var _useState = useState({\n    title: null,\n    description: null,\n    cover: {\n      state: \"edit\",\n      data: {\n        type: \"image\",\n        image: null\n      }\n    },\n    text: [],\n    categories: []\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var getValue = function getValue(event, access) {\n    if (access == 'title') {\n      setData(_objectSpread({}, data, {\n        title: event.target.value\n      }));\n    } else if (access == 'description') {\n      setData(_objectSpread({}, data, {\n        description: event.target.value\n      }));\n    }\n  };\n\n  var addCover = function addCover(file) {\n    setData(_objectSpread({}, data, {\n      cover: file\n    }));\n  };\n\n  var removeCover = function removeCover() {\n    setData(_objectSpread({}, data, {\n      cover: null\n    }));\n  };\n\n  var appendCategory = function appendCategory(category) {\n    var categories = data.categories;\n    categories.push(category);\n    setData(_objectSpread({}, data, {\n      categories: categories\n    }));\n  };\n\n  var removeCategory = function removeCategory(index) {\n    var categories = data.categories;\n    categories.splice(index, 1);\n    setData(_objectSpread({}, data, {\n      categories: categories\n    }));\n  };\n\n  var appendContent = function appendContent(content) {\n    var contentList = data.text;\n    contentList.push(content);\n    setData(_objectSpread({}, data, {\n      text: contentList\n    }));\n  };\n\n  var editContent = function editContent(index, content) {\n    var contentList = data.text;\n    contentList[index] = content;\n    setData(_objectSpread({}, data, {\n      text: contentList\n    }));\n  };\n\n  var removeContent = function removeContent(index) {\n    var contentList = data.text;\n    contentList.splice(index, 1);\n    setData(_objectSpread({}, data, {\n      text: contentList\n    }));\n  };\n\n  var editCoverContent = function editCoverContent(index, content) {\n    setData(_objectSpread({}, data, {\n      cover: content\n    }));\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    var coverId, textList, i, response, newData;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            coverId = -1;\n\n            if (!(data.cover.data.image != null)) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(uploadImage(event, data.cover.data.image, props.cookies['csrftoken']).then(function (res) {\n              return res.data;\n            }));\n\n          case 5:\n            coverId = _context.sent;\n\n          case 6:\n            textList = [];\n            i = 0;\n\n          case 8:\n            if (!(i < data.text.length)) {\n              _context.next = 20;\n              break;\n            }\n\n            if (!(data.text[i].data.type == 'image')) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(uploadImage(event, data.text[i].data.image, props.cookies['csrftoken']).then(function (res) {\n              return res;\n            }));\n\n          case 12:\n            response = _context.sent;\n            textList.push(querystring.stringify({\n              type: 'image',\n              image: response.data\n            }));\n            _context.next = 17;\n            break;\n\n          case 16:\n            textList.push(querystring.stringify({\n              type: 'text',\n              text: data.text[i].data.text\n            }));\n\n          case 17:\n            i++;\n            _context.next = 8;\n            break;\n\n          case 20:\n            newData = _objectSpread({}, data, {\n              cover: coverId,\n              text: querystring.stringify(textList)\n            });\n            postRequest(querystring.stringify({\n              operation: \"register\",\n              data: querystring.stringify(newData)\n            }), props.cookies['csrftoken'], process.env.domain + '/api/articles/').then(function (res) {\n              console.log(res);\n            });\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var content = __jsx(\"div\", {\n    className: \"m-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    className: \"w-full\",\n    action: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, __jsx(TxtField, {\n    label: \"Title\",\n    onChange: function onChange(event) {\n      return getValue(event, 'title');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), __jsx(TxtArea, {\n    label: \"Description\",\n    onChange: function onChange(event) {\n      return getValue(event, 'description');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"pb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    className: \"block mb-1 font-sans font-medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"Add Cover\"), __jsx(AddSingleImage, {\n    index: -1,\n    className: \"\",\n    data: data.cover,\n    close: \"false\",\n    editContent: editCoverContent,\n    removeContent: function removeContent() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    className: \"block mb-1 font-sans font-medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Add Article Content\"), __jsx(\"div\", {\n    className: \"h-auto w-full border\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, data.text.map(function (content, index) {\n    if (content.data.type == \"image\") {\n      return __jsx(AddSingleImage, {\n        index: index,\n        className: \"m-2\",\n        data: content,\n        close: \"true\",\n        editContent: editContent,\n        removeContent: removeContent,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 41\n        }\n      });\n    } else {\n      return __jsx(AddText, {\n        index: index,\n        className: \"m-2\",\n        data: content,\n        editContent: editContent,\n        removeContent: removeContent,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 41\n        }\n      });\n    }\n  }), __jsx(AddContent, {\n    className: \"m-2\",\n    appendContent: appendContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }))), __jsx(AddArticleCategory, {\n    categories: data.categories,\n    addCategory: appendCategory,\n    removeCategory: removeCategory,\n    csrftoken: props.cookies['csrftoken'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), __jsx(BtnBbw, {\n    className: \"w-full h-12 mt-8 mb-4\",\n    value: \"ADD ARTICLE\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  })));\n\n  return content;\n};\n\nexport default AddArticle;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/elements/article/AddArticle.js"],"names":["React","useState","useEffect","TxtField","TxtArea","BtnBbw","uploadImage","AddContent","AddSingleImage","AddText","querystring","postRequest","AddArticleCategory","AddArticle","props","title","description","cover","state","data","type","image","text","categories","setData","getValue","event","access","target","value","addCover","file","removeCover","appendCategory","category","push","removeCategory","index","splice","appendContent","content","contentList","editContent","removeContent","editCoverContent","handleSubmit","preventDefault","coverId","cookies","then","res","textList","i","length","response","stringify","newData","operation","process","env","domain","console","log","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { TxtField, TxtArea } from '../../graphics/textFields'\r\nimport { BtnBbw } from '../../graphics/buttons'\r\nimport { uploadImage } from '../../../services/api/uploadImage'\r\nimport { AddContent } from '../../widgets/article'\r\nimport AddSingleImage from '../../widgets/image/AddSingleImage'\r\nimport AddText from '../../widgets/article/AddText'\r\nimport querystring from 'querystring'\r\nimport { postRequest } from '../../../services/api/post/postRequest'\r\nimport AddArticleCategory from '../../widgets/category/AddArticleCategory'\r\n\r\nconst AddArticle = props => {\r\n\r\n    const [data, setData] = useState({\r\n        title: null,\r\n        description: null,\r\n        cover: {\r\n            state: \"edit\",\r\n            data: {\r\n                type: \"image\",\r\n                image: null\r\n            }\r\n        },\r\n        text: [],\r\n        categories: []\r\n    })\r\n\r\n    const getValue = (event, access) => {\r\n        if (access == 'title') {\r\n            setData({ ...data, title: event.target.value })\r\n        } else if (access == 'description') {\r\n            setData({ ...data, description: event.target.value })\r\n        }\r\n    }\r\n\r\n    const addCover = (file) => {\r\n        setData({ ...data, cover: file })\r\n    }\r\n\r\n    const removeCover = () => {\r\n        setData({ ...data, cover: null })\r\n    }\r\n\r\n    const appendCategory = (category) => {\r\n        let categories = data.categories\r\n        categories.push(category)\r\n        setData({ ...data, categories: categories })\r\n    }\r\n\r\n    const removeCategory = (index) => {\r\n        let categories = data.categories\r\n        categories.splice(index, 1)\r\n        setData({ ...data, categories: categories })\r\n    }\r\n\r\n    const appendContent = (content) => {\r\n        let contentList = data.text\r\n        contentList.push(content)\r\n        setData({ ...data, text: contentList })\r\n    }\r\n\r\n    const editContent = (index, content) => {\r\n        let contentList = data.text\r\n        contentList[index] = content\r\n        setData({ ...data, text: contentList })\r\n    }\r\n\r\n    const removeContent = (index) => {\r\n        let contentList = data.text\r\n        contentList.splice(index, 1)\r\n        setData({ ...data, text: contentList })\r\n    }\r\n\r\n    const editCoverContent = (index, content) => {\r\n        setData({ ...data, cover: content })\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        let coverId = -1\r\n        if (data.cover.data.image != null)\r\n            coverId = await uploadImage(event, data.cover.data.image, props.cookies['csrftoken']).then((res) => res.data)\r\n        let textList = []\r\n        for (let i = 0; i < data.text.length; i++) {\r\n            if (data.text[i].data.type == 'image') {\r\n                let response = await uploadImage(event, data.text[i].data.image, props.cookies['csrftoken']).then((res) => res)\r\n                textList.push(querystring.stringify({\r\n                    type: 'image',\r\n                    image: response.data\r\n                }))\r\n            } else {\r\n                textList.push(querystring.stringify({\r\n                    type: 'text',\r\n                    text:  data.text[i].data.text\r\n                }))\r\n            }\r\n        }\r\n        let newData = {\r\n            ...data,\r\n            cover: coverId,\r\n            text: querystring.stringify(textList)\r\n        }\r\n        postRequest(querystring.stringify({\r\n            operation: \"register\",\r\n            data: querystring.stringify(newData)\r\n        }), props.cookies['csrftoken'], process.env.domain + '/api/articles/').then((res) => {\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n    let content = (\r\n        <div className=\"m-4\">\r\n            <form className=\"w-full\" action=\"\">\r\n                <TxtField label=\"Title\" onChange={(event) => getValue(event, 'title')} />\r\n                <TxtArea label=\"Description\" onChange={(event) => getValue(event, 'description')} />\r\n                <div className=\"pb-2\">\r\n                    <label className=\"block mb-1 font-sans font-medium\">Add Cover</label>\r\n                    <AddSingleImage index={-1} className=\"\" data={data.cover} close=\"false\" editContent={editCoverContent} removeContent={() => { }} />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block mb-1 font-sans font-medium\">Add Article Content</label>\r\n                    <div className=\"h-auto w-full border\">\r\n                        {data.text.map((content, index) => {\r\n                            if (content.data.type == \"image\") {\r\n                                return (<AddSingleImage index={index} className=\"m-2\" data={content} close=\"true\" editContent={editContent} removeContent={removeContent} />)\r\n                            } else {\r\n                                return (<AddText index={index} className=\"m-2\" data={content} editContent={editContent} removeContent={removeContent} />)\r\n                            }\r\n                        })}\r\n                        <AddContent className=\"m-2\" appendContent={appendContent} />\r\n                    </div>\r\n                </div>\r\n                <AddArticleCategory\r\n                    categories={data.categories}\r\n                    addCategory={appendCategory}\r\n                    removeCategory={removeCategory}\r\n                    csrftoken={props.cookies['csrftoken']}/>\r\n                <BtnBbw className=\"w-full h-12 mt-8 mb-4\" value=\"ADD ARTICLE\" onClick={handleSubmit} />\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default AddArticle"]},"metadata":{},"sourceType":"module"}