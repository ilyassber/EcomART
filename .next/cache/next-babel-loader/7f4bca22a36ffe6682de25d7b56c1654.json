{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\ecomartwebapp\\\\pages\\\\user\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { parseCookies } from '../../lib/parseCookies';\n\nconst UserPage = props => {\n  console.log(props.cookies);\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  useEffect(() => {\n    console.log('useEffect runs');\n    setIsLoading(true);\n    let config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'utoken': props.cookies.uToken\n      }\n    };\n    axios.defaults.withCredentials = true;\n    axios.get('http://localhost:8000/products/', config).then(res => {\n      console.log(res.data);\n      setData(JSON.stringify(res.data));\n      setIsLoading(false);\n    });\n  }, []);\n\n  let content = __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Loading characters...\");\n\n  if (!isLoading && data && data.length > 0) {\n    console.log(data);\n    content = __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, data);\n  } else if (!isLoading && (!data || data.length === 0)) {\n    content = __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, \"Could not fetch any data.\");\n  }\n\n  return content;\n};\n\nUserPage.getInitialProps = ({\n  req\n}) => {\n  const cookies = parseCookies(req);\n  return {\n    cookies: cookies\n  };\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/ecomartwebapp/pages/user/index.js"],"names":["React","useState","useEffect","axios","parseCookies","UserPage","props","console","log","cookies","data","setData","isLoading","setIsLoading","config","headers","uToken","defaults","withCredentials","get","then","res","JSON","stringify","content","length","getInitialProps","req"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AAEA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACW,SAAD;AAAA,OAAYC;AAAZ,MAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAK,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,QAAIC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACP,wBAAgB,mCADT;AAEP,kBAAUT,KAAK,CAACG,OAAN,CAAcO;AAFjB;AADE,KAAb;AAMAb,IAAAA,KAAK,CAACc,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACAf,IAAAA,KAAK,CAACgB,GAAN,CAAU,iCAAV,EAA6CL,MAA7C,EACGM,IADH,CACQC,GAAG,IAAI;AACXd,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAG,CAACX,IAAhB;AACAC,MAAAA,OAAO,CAACW,IAAI,CAACC,SAAL,CAAeF,GAAG,CAACX,IAAnB,CAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH;AAMD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIW,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAd;;AAEA,MAAI,CAACZ,SAAD,IAAcF,IAAd,IAAsBA,IAAI,CAACe,MAAL,GAAc,CAAxC,EAA2C;AACzClB,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAc,IAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGd,IADH,CADF;AAKD,GAPD,MAOO,IAAI,CAACE,SAAD,KAAe,CAACF,IAAD,IAASA,IAAI,CAACe,MAAL,KAAgB,CAAxC,CAAJ,EAAgD;AACrDD,IAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAV;AACD;;AACD,SAAOA,OAAP;AACD,CAtCD;;AAwCAnB,QAAQ,CAACqB,eAAT,GAA2B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACtC,QAAMlB,OAAO,GAAGL,YAAY,CAACuB,GAAD,CAA5B;AAEA,SAAO;AACLlB,IAAAA,OAAO,EAAEA;AADJ,GAAP;AAGD,CAND;;AAQA,eAAeJ,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { parseCookies } from '../../lib/parseCookies'\n\nconst UserPage = props => {\n\n  console.log(props.cookies)\n\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    console.log('useEffect runs');\n    setIsLoading(true);\n    let config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'utoken': props.cookies.uToken,\n      }\n    }\n    axios.defaults.withCredentials = true\n    axios.get('http://localhost:8000/products/', config)\n      .then(res => {\n        console.log(res.data)\n        setData(JSON.stringify(res.data));\n        setIsLoading(false);\n      })\n  }, []);\n\n  let content = <p>Loading characters...</p>;\n\n  if (!isLoading && data && data.length > 0) {\n    console.log(data)\n    content = (\n      <p>\n        {data}\n      </p>\n    );\n  } else if (!isLoading && (!data || data.length === 0)) {\n    content = <p>Could not fetch any data.</p>;\n  }\n  return content;\n};\n\nUserPage.getInitialProps = ({ req }) => {\n  const cookies = parseCookies(req);\n\n  return {\n    cookies: cookies\n  };\n};\n\nexport default UserPage;"]},"metadata":{},"sourceType":"module"}