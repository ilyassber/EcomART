{"ast":null,"code":"import axios from 'axios';\nimport querystring from 'querystring';\nexport function registerUser(data, operation, csrttoken) {\n  return new Promise((resolve, reject) => {\n    let axiosConfig = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'X-CSRFToken': csrttoken\n      }\n    };\n    let content = {\n      operation: operation,\n      data: querystring.stringify(data)\n    };\n    axios.defaults.withCredentials = true;\n    axios.post(process.env.domain + '/api/users/', querystring.stringify(content), axiosConfig).then(response => {\n      console.log(response.data);\n      localStorage.setItem('_maker', JSON.stringify(response.data));\n      resolve(response.data);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/services/authentication/registerUser.js"],"names":["axios","querystring","registerUser","data","operation","csrttoken","Promise","resolve","reject","axiosConfig","headers","content","stringify","defaults","withCredentials","post","process","env","domain","then","response","console","log","localStorage","setItem","JSON","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,SAA5B,EAAuCC,SAAvC,EAAkD;AACrD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIC,WAAW,GAAG;AACdC,MAAAA,OAAO,EAAE;AACL,wBAAgB,mCADX;AAEL,uBAAeL;AAFV;AADK,KAAlB;AAMA,QAAIM,OAAO,GAAG;AACVP,MAAAA,SAAS,EAAEA,SADD;AAEVD,MAAAA,IAAI,EAAEF,WAAW,CAACW,SAAZ,CAAsBT,IAAtB;AAFI,KAAd;AAIAH,IAAAA,KAAK,CAACa,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACAd,IAAAA,KAAK,CAACe,IAAN,CAAWC,OAAO,CAACC,GAAR,CAAYC,MAAZ,GAAqB,aAAhC,EAA+CjB,WAAW,CAACW,SAAZ,CAAsBD,OAAtB,CAA/C,EAA+EF,WAA/E,EACKU,IADL,CACWC,QAAD,IAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACjB,IAArB;AACAoB,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACb,SAAL,CAAeQ,QAAQ,CAACjB,IAAxB,CAA/B;AACAI,MAAAA,OAAO,CAACa,QAAQ,CAACjB,IAAV,CAAP;AACH,KALL,EAMKuB,KANL,CAMYC,KAAD,IAAW;AACdnB,MAAAA,MAAM,CAACmB,KAAD,CAAN;AACH,KARL;AASH,GArBM,CAAP;AAsBH","sourcesContent":["import axios from 'axios'\r\nimport querystring from 'querystring'\r\n\r\nexport function registerUser(data, operation, csrttoken) {\r\n    return new Promise((resolve, reject) => {\r\n        let axiosConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'X-CSRFToken': csrttoken\r\n            }\r\n        }\r\n        let content = {\r\n            operation: operation,\r\n            data: querystring.stringify(data)\r\n        }\r\n        axios.defaults.withCredentials = true\r\n        axios.post(process.env.domain + '/api/users/', querystring.stringify(content), axiosConfig)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                localStorage.setItem('_maker', JSON.stringify(response.data))\r\n                resolve(response.data)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}