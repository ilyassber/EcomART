{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport SousCategoriesBar from './sousCategoriesBar';\nimport { Brand } from '../../../logo';\n\nconst SiteNameContainer = ({\n  style\n}) => __jsx(\"div\", {\n  className: style\n}, __jsx(Brand, null));\n\nexport default function CategoriesBar({\n  style,\n  max_shown,\n  categories,\n  brandNameStyle\n}) {\n  const {\n    0: openCategorie,\n    1: setOpenCategorie\n  } = useState({\n    open: false,\n    categorie: null\n  }); // open/close + the categorie to be shown in sougategories \n\n  const categorieRef = useRef(null); // reference on \"categories list\" : to track outside click \n\n  console.log(\" Categorie RENDER\"); // load clicked categorie and set sousCategories to open  \n\n  const clickOnCategorie = categorie => {\n    setOpenCategorie({\n      open: true,\n      categorie: categorie\n    });\n    console.log(\" openCategorie : ->  \", openCategorie);\n  }; // add eventListener to track clicks : close souscategories bar when an outside click was detected  \n\n\n  useEffect(() => {\n    function categorieClickHandler(event) {\n      if (categorieRef.current && !categorieRef.current.contains(event.target)) setOpenCategorie({\n        open: false,\n        categorie: null\n      });\n    }\n\n    document.addEventListener(\"mousedown\", categorieClickHandler);\n    return () => {\n      document.removeEventListener(\"mousedown\", categorieClickHandler);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    ref: categorieRef,\n    className: style\n  }, __jsx(\"div\", {\n    className: \"flex flex-row justify-between h-16 w-full\"\n  }, __jsx(\"div\", {\n    className: \"flex flex-row justify-start items-center h-full flex-1 \"\n  }, __jsx(SiteNameContainer, {\n    style: brandNameStyle\n  })), __jsx(\"ul\", {\n    className: \"flex flex-row justify-center items-center h-full\"\n  }, categories.map((categorie, index) => index < max_shown && __jsx(\"li\", {\n    key: index,\n    className: `flex px-4 h-full justify-center items-center cursor-pointer font-lato text-base font-black ${openCategorie.categorie && openCategorie.categorie === categorie ? \"text-yellow-600\" : \"text-gray-900 hover:text-gray-700\"}`,\n    onClick: () => clickOnCategorie(categorie)\n  }, categorie.tag.toUpperCase()))), __jsx(\"div\", {\n    className: \"flex flex-1 h-full\"\n  })), openCategorie.open && __jsx(SousCategoriesBar, {\n    closeClickHandler: () => setOpenCategorie({\n      open: false,\n      categorie: null\n    }),\n    categorie: openCategorie.categorie\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}