{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport querystring from 'querystring';\nexport function authenticate(data, operation, csrttoken) {\n  return _regeneratorRuntime.async(function authenticate$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var axiosConfig = {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'X-CSRFToken': csrttoken\n              }\n            };\n            var content = {\n              operation: operation,\n              data: querystring.stringify(data)\n            };\n            axios.defaults.withCredentials = true;\n            axios.post(process.env.domain + '/api/users/', querystring.stringify(content), axiosConfig).then(function (response) {\n              return response;\n            })[\"catch\"](function (error) {\n              return null;\n            });\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/services/authentication/authentication.js"],"names":["axios","querystring","authenticate","data","operation","csrttoken","Promise","resolve","reject","axiosConfig","headers","content","stringify","defaults","withCredentials","post","process","env","domain","then","response","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,OAAO,SAAeC,YAAf,CAA4BC,IAA5B,EAAkCC,SAAlC,EAA6CC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,2CACI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gBAAIC,WAAW,GAAG;AACdC,cAAAA,OAAO,EAAE;AACL,gCAAgB,mCADX;AAEL,+BAAeL;AAFV;AADK,aAAlB;AAMA,gBAAIM,OAAO,GAAG;AACVP,cAAAA,SAAS,EAAEA,SADD;AAEVD,cAAAA,IAAI,EAAEF,WAAW,CAACW,SAAZ,CAAsBT,IAAtB;AAFI,aAAd;AAIAH,YAAAA,KAAK,CAACa,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACAd,YAAAA,KAAK,CAACe,IAAN,CAAWC,OAAO,CAACC,GAAR,CAAYC,MAAZ,GAAqB,aAAhC,EAA+CjB,WAAW,CAACW,SAAZ,CAAsBD,OAAtB,CAA/C,EAA+EF,WAA/E,EACKU,IADL,CACU,UAACC,QAAD,EAAc;AAChB,qBAAOA,QAAP;AACH,aAHL,WAIW,UAACC,KAAD,EAAW;AACd,qBAAO,IAAP;AACH,aANL;AAOH,WAnBM,CADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios'\r\nimport querystring from 'querystring'\r\n\r\nexport async function authenticate(data, operation, csrttoken) {\r\n    return new Promise((resolve, reject) => {\r\n        let axiosConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'X-CSRFToken': csrttoken\r\n            }\r\n        }\r\n        let content = {\r\n            operation: operation,\r\n            data: querystring.stringify(data)\r\n        }\r\n        axios.defaults.withCredentials = true\r\n        axios.post(process.env.domain + '/api/users/', querystring.stringify(content), axiosConfig)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                return null\r\n            })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}