{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\elements\\\\article\\\\AddArticle.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { TxtField, TxtArea } from '../../graphics/textFields';\nimport { BtnBbw } from '../../graphics/buttons';\nimport { uploadImage } from '../../../services/api/uploadImage';\nimport { AddContent } from '../../widgets/article';\nimport AddSingleImage from '../../widgets/image/AddSingleImage';\n\nvar AddArticle = function AddArticle(props) {\n  var _useState = useState({\n    title: null,\n    description: null,\n    cover: null,\n    text: []\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var getValue = function getValue(event, access) {\n    if (access == 'title') {\n      setData(_objectSpread({}, data, {\n        title: event.target.value\n      }));\n    } else if (access == 'description') {\n      setData(_objectSpread({}, data, {\n        description: event.target.value\n      }));\n    }\n  };\n\n  var addCover = function addCover(file) {\n    setData(_objectSpread({}, data, {\n      cover: file\n    }));\n  };\n\n  var removeCover = function removeCover() {\n    setData(_objectSpread({}, data, {\n      cover: null\n    }));\n  };\n\n  var appendContent = function appendContent(content) {\n    var contentList = data.text;\n    contentList.push(content);\n    setData(_objectSpread({}, data, {\n      text: contentList\n    }));\n  };\n\n  var editContent = function editContent(index, content) {\n    var contentList = data.text;\n    contentList.splice(index, 0, content);\n    setData(_objectSpread({}, data, {\n      text: contentList\n    }));\n  };\n\n  var removeContent = function removeContent(index) {\n    var contentList = data.text;\n    contentList.splice(index, 1);\n    setData(_objectSpread({}, data, {\n      text: contentList\n    }));\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var content = __jsx(\"div\", {\n    className: \"m-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    className: \"\",\n    action: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(TxtField, {\n    label: \"Title\",\n    onChange: function onChange(event) {\n      return getValue(event, 'title');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), __jsx(TxtArea, {\n    label: \"Description\",\n    onChange: function onChange(event) {\n      return getValue(event, 'description');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"border\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, data.text.map(function (content) {\n    return __jsx(AddSingleImage, {\n      data: content,\n      editContent: editContent,\n      removeContent: removeContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    });\n  }), __jsx(AddContent, {\n    className: \"m-2\",\n    appendContent: appendContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })), __jsx(BtnBbw, {\n    className: \"w-full h-12 mt-8 mb-4\",\n    value: \"ADD ARTICLE\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })));\n\n  return content;\n};\n\nexport default AddArticle;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/elements/article/AddArticle.js"],"names":["React","useState","useEffect","TxtField","TxtArea","BtnBbw","uploadImage","AddContent","AddSingleImage","AddArticle","props","title","description","cover","text","data","setData","getValue","event","access","target","value","addCover","file","removeCover","appendContent","content","contentList","push","editContent","index","splice","removeContent","handleSubmit","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { TxtField, TxtArea } from '../../graphics/textFields'\r\nimport { BtnBbw } from '../../graphics/buttons'\r\nimport { uploadImage } from '../../../services/api/uploadImage'\r\nimport { AddContent } from '../../widgets/article'\r\nimport AddSingleImage from '../../widgets/image/AddSingleImage'\r\n\r\nconst AddArticle = props => {\r\n\r\n    const [data, setData] = useState({\r\n        title: null,\r\n        description: null,\r\n        cover: null,\r\n        text: []\r\n    })\r\n\r\n    const getValue = (event, access) => {\r\n        if (access == 'title') {\r\n            setData({...data, title: event.target.value})\r\n        } else if (access == 'description') {\r\n            setData({...data, description: event.target.value})\r\n        }\r\n    }\r\n\r\n    const addCover = (file) => {\r\n        setData({...data, cover: file})\r\n    }\r\n\r\n    const removeCover = () => {\r\n        setData({...data, cover: null})\r\n    }\r\n\r\n    const appendContent = (content) => {\r\n        let contentList = data.text\r\n        contentList.push(content)\r\n        setData({...data, text: contentList})\r\n    }\r\n\r\n    const editContent = (index, content) => {\r\n        let contentList = data.text\r\n        contentList.splice(index, 0, content)\r\n        setData({...data, text: contentList})\r\n    }\r\n\r\n    const removeContent = (index) => {\r\n        let contentList = data.text\r\n        contentList.splice(index, 1)\r\n        setData({...data, text: contentList})\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        /*\r\n        event.preventDefault()\r\n        for (let i = 0; i < files.length; i++) {\r\n            let response = await uploadImage(event, files[0], props.cookies['csrftoken']).then((res) => res)\r\n            data['pics_list'].push(response.data)\r\n        }\r\n        addProduct(data, props.cookies['csrftoken']).then((res) => {\r\n            console.log(res)\r\n        })\r\n        */\r\n    }\r\n\r\n    let content = (\r\n        <div className=\"m-4\">\r\n            <form className=\"\" action=\"\">\r\n                <TxtField label=\"Title\" onChange={(event) => getValue(event, 'title')} />\r\n                <TxtArea label=\"Description\" onChange={(event) => getValue(event, 'description')} />\r\n                <div className=\"border\">\r\n                    {data.text.map((content) => {\r\n                        return (<AddSingleImage data={content} editContent={editContent} removeContent={removeContent} />)\r\n                    })}\r\n                    <AddContent className=\"m-2\" appendContent={appendContent} />\r\n                </div>\r\n                <BtnBbw className=\"w-full h-12 mt-8 mb-4\" value=\"ADD ARTICLE\" onClick={handleSubmit} />\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default AddArticle"]},"metadata":{},"sourceType":"module"}