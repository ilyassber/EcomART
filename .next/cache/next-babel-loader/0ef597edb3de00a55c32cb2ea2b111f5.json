{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getCategories } from '../../../services/api/fetch/getCategories';\n\nconst SelectCategory = props => {\n  const forceUpdate = React.useReducer(() => ({}))[1];\n  const selectedRef = useRef();\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  let currentLvl = null;\n  let currentParent = null;\n  let content = null;\n\n  const getData = () => {\n    setData(null);\n    getCategories(currentLvl, props.parent, props.csrftoken).then(res => {\n      setData(JSON.stringify(res));\n    });\n  };\n\n  useEffect(() => {\n    currentLvl = props.lvl;\n    currentParent = props.parent;\n    getData();\n  }, []);\n\n  if (data && JSON.parse(data).length > 0) {\n    const options = JSON.parse(data).map(option => {\n      return __jsx(\"option\", {\n        key: option.id,\n        value: option.name\n      });\n    });\n\n    const getOption = () => {\n      let value = selectedRef.current.value;\n      JSON.parse(data).map(option => {\n        if (option.name == value) {\n          props.setCategory(option);\n          currentLvl = option.lvl + 1;\n          getData(); //selectedRef.current.value = ''\n          //forceUpdate()\n        }\n      });\n    };\n\n    content = __jsx(\"div\", {\n      className: props.className\n    }, __jsx(\"div\", {\n      className: \"h-8 flex\"\n    }, __jsx(\"div\", {\n      className: \"h-full w-auto content-center mx-auto flex flex-wrap font-sans font-bold\"\n    }, __jsx(\"b\", {\n      className: \"text-gray-900 text-sm text-center ml-2 mr-2\"\n    }, \"\\u203A\")), __jsx(\"div\", null, __jsx(\"input\", {\n      className: \"h-8 w-auto font-sans font-medium border text-gray-700 leading-tight hover:outline-none focus:outline-none p-1\",\n      ref: selectedRef,\n      list: \"data\",\n      onChange: getOption\n    }), __jsx(\"datalist\", {\n      id: \"data\"\n    }, options))));\n  }\n\n  return content;\n};\n\nexport default SelectCategory;","map":null,"metadata":{},"sourceType":"module"}