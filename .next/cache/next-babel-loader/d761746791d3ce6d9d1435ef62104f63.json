{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\elements\\\\product\\\\AddProduct.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { TxtField, TxtArea, IntField } from '../../graphics/textFields';\nimport { BtnBbw } from '../../graphics/buttons';\nimport AddImageGrid from '../../widgets/image/AddImageGrid';\nimport { uploadImage } from '../../../services/api/uploadImage';\nimport { addProduct } from '../../../services/api/addProduct';\nimport AddCategory from '../../widgets/category/AddCategory';\n\nconst AddProduct = props => {\n  let data = {};\n  data['pics_list'] = [];\n  data['tags'] = [];\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n\n  const getValue = (event, access) => {\n    if (access == 'name') {\n      data['name'] = event.target.value;\n    } else if (access == 'description') {\n      data['description'] = event.target.value;\n    } else if (access == 'price') {\n      data['price'] = event.target.value;\n    } else if (access == 'quantity') {\n      data['quantity'] = event.target.value;\n    }\n  };\n\n  const appendFile = newFiles => {\n    newFiles.forEach(f => files.push(f), this);\n  };\n\n  const removeFile = index => {\n    files.splice(index, 1);\n  };\n\n  const appendCategory = category => {\n    categories.splice(category.lvl, 0, category);\n  };\n\n  const removeCategory = index => {\n    categories.splice(index, categories.length - index);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    for (let i = 0; i < files.length; i++) {\n      let response = await uploadImage(event, files[0], props.cookies['csrftoken']).then(res => res);\n      data['pics_list'].push(response.data);\n    }\n\n    for (let i = 0; i < categories.length; i++) {\n      data['tags'].push(categories[i].id);\n    }\n\n    console.log(data);\n    addProduct(data, props.cookies['csrftoken']).then(res => {\n      console.log(res);\n    });\n  };\n\n  let content = __jsx(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full h-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    className: \"m-4\",\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(TxtField, {\n    label: \"Product Name\",\n    onChange: event => getValue(event, 'name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), __jsx(TxtArea, {\n    label: \"Product Description\",\n    onChange: event => getValue(event, 'description'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), __jsx(TxtField, {\n    label: \"Product Region\",\n    onChange: event => getValue(event, 'region'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), __jsx(IntField, {\n    label: \"Price\",\n    onChange: event => getValue(event, 'price'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), __jsx(IntField, {\n    label: \"Quantity\",\n    onChange: event => getValue(event, 'quantity'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), __jsx(AddCategory, {\n    categories: categories,\n    addCategory: appendCategory,\n    removeCategory: removeCategory,\n    csrftoken: props.cookies['csrftoken'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), __jsx(AddImageGrid, {\n    files: files,\n    addImage: appendFile,\n    removeImage: removeFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), __jsx(BtnBbw, {\n    className: \"w-full h-12 mt-8 mb-4\",\n    value: \"ADD PRODUCT\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }))));\n\n  return content;\n};\n\nexport default AddProduct;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/elements/product/AddProduct.js"],"names":["React","useState","TxtField","TxtArea","IntField","BtnBbw","AddImageGrid","uploadImage","addProduct","AddCategory","AddProduct","props","data","files","setFiles","categories","setCategories","getValue","event","access","target","value","appendFile","newFiles","forEach","f","push","removeFile","index","splice","appendCategory","category","lvl","removeCategory","length","handleSubmit","preventDefault","i","response","cookies","then","res","id","console","log","content","className"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { TxtField, TxtArea, IntField } from '../../graphics/textFields'\r\nimport { BtnBbw } from '../../graphics/buttons'\r\nimport AddImageGrid from '../../widgets/image/AddImageGrid'\r\nimport { uploadImage } from '../../../services/api/uploadImage'\r\nimport { addProduct } from '../../../services/api/addProduct'\r\nimport AddCategory from '../../widgets/category/AddCategory'\r\n\r\nconst AddProduct = props => {\r\n\r\n    let data = {}\r\n    data['pics_list'] = []\r\n    data['tags'] = []\r\n    const [files, setFiles] = useState([])\r\n    const [categories, setCategories] = useState([])\r\n\r\n    const getValue = (event, access) => {\r\n        if (access == 'name') {\r\n            data['name'] = event.target.value\r\n        } else if (access == 'description') {\r\n            data['description'] = event.target.value\r\n        } else if (access == 'price') {\r\n            data['price'] = event.target.value\r\n        } else if (access == 'quantity') {\r\n            data['quantity'] = event.target.value\r\n        }\r\n    }\r\n\r\n    const appendFile = (newFiles) => {\r\n        newFiles.forEach((f) => files.push(f), this)\r\n    }\r\n\r\n    const removeFile = (index) => {\r\n        files.splice(index, 1)\r\n    }\r\n\r\n    const appendCategory = (category) => {\r\n        categories.splice(category.lvl, 0, category)\r\n    }\r\n\r\n    const removeCategory = (index) => {\r\n        categories.splice(index, (categories.length - index))\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        for (let i = 0; i < files.length; i++) {\r\n            let response = await uploadImage(event, files[0], props.cookies['csrftoken']).then((res) => res)\r\n            data['pics_list'].push(response.data)\r\n        }\r\n        for (let i = 0; i < categories.length; i++) {\r\n            data['tags'].push(categories[i].id)\r\n        }\r\n        console.log(data)\r\n        addProduct(data, props.cookies['csrftoken']).then((res) => {\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n    let content = (\r\n        <div className={props.className}>\r\n            <div className=\"w-full h-auto\">\r\n                <form className=\"m-4\" action=\"\">\r\n                    <TxtField label=\"Product Name\" onChange={(event) => getValue(event, 'name')} />\r\n                    <TxtArea label=\"Product Description\" onChange={(event) => getValue(event, 'description')} />\r\n                    <TxtField label=\"Product Region\" onChange={(event) => getValue(event, 'region')} />\r\n                    <IntField label=\"Price\" onChange={(event) => getValue(event, 'price')} />\r\n                    <IntField label=\"Quantity\" onChange={(event) => getValue(event, 'quantity')} />\r\n                    <AddCategory categories={categories} addCategory={appendCategory} removeCategory={removeCategory} csrftoken={props.cookies['csrftoken']} />\r\n                    <AddImageGrid files={files} addImage={appendFile} removeImage={removeFile} />\r\n                    <BtnBbw className=\"w-full h-12 mt-8 mb-4\" value=\"ADD PRODUCT\" onClick={handleSubmit} />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default AddProduct"]},"metadata":{},"sourceType":"module"}