{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\graphics\\\\textFields\\\\TxtArea.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar TxtArea = function TxtArea(props) {\n  var color = 'gray-900';\n  var borderColor = 'gray-300';\n  var placeholder = '';\n  var height = 12;\n  var shadow = 'border border-';\n\n  if (props.align != null) {\n    align = props.align;\n  }\n\n  if (props.color != null) {\n    color = props.color;\n  }\n\n  if (props.height != null) {\n    height = props.height;\n  }\n\n  if (props.error == true) {\n    borderColor = 'red-600';\n    color = 'red-600';\n  }\n\n  if (props.reset == true) {\n    color = 'white';\n    borderColor = 'gray-300';\n    inputRef.current.value = '';\n  }\n\n  if (props.placeholder != null) {\n    placeholder = props.placeholder;\n  }\n\n  if (props.shadow == true) {\n    shadow = 'shadow';\n    borderColor = '';\n  }\n\n  var content = __jsx(\"div\", {\n    className: props.className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, props.label != null ? __jsx(\"label\", {\n    className: 'w-full block mb-1 font-sans font-medium' + ' text-' + color + ' text-' + align,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }\n  }, props.label) : null, __jsx(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    className: 'appearance-none ' + shadow + borderColor + ' w-full h-' + height + ' py-2 px-3 font-sans font-medium text-gray-700 leading-tight focus:outline-none focus:border-black',\n    type: \"text\",\n    onChange: props.onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n\n  return content;\n};\n\nexport default TxtArea;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/graphics/textFields/TxtArea.js"],"names":["TxtArea","props","color","borderColor","placeholder","height","shadow","align","error","reset","inputRef","current","value","content","className","label","onChange"],"mappings":";;;;;;AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AAErB,MAAIC,KAAK,GAAG,UAAZ;AACA,MAAIC,WAAW,GAAG,UAAlB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,MAAM,GAAG,gBAAb;;AAEA,MAAIL,KAAK,CAACM,KAAN,IAAe,IAAnB,EAAyB;AACrBA,IAAAA,KAAK,GAAGN,KAAK,CAACM,KAAd;AACH;;AAED,MAAIN,KAAK,CAACC,KAAN,IAAe,IAAnB,EAAyB;AACrBA,IAAAA,KAAK,GAAGD,KAAK,CAACC,KAAd;AACH;;AAED,MAAID,KAAK,CAACI,MAAN,IAAgB,IAApB,EAA0B;AACtBA,IAAAA,MAAM,GAAGJ,KAAK,CAACI,MAAf;AACH;;AAED,MAAIJ,KAAK,CAACO,KAAN,IAAe,IAAnB,EAAyB;AACrBL,IAAAA,WAAW,GAAG,SAAd;AACAD,IAAAA,KAAK,GAAG,SAAR;AACH;;AAED,MAAID,KAAK,CAACQ,KAAN,IAAe,IAAnB,EAAyB;AACrBP,IAAAA,KAAK,GAAG,OAAR;AACAC,IAAAA,WAAW,GAAG,UAAd;AACAO,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,GAAyB,EAAzB;AACH;;AAED,MAAIX,KAAK,CAACG,WAAN,IAAqB,IAAzB,EAA+B;AAC3BA,IAAAA,WAAW,GAAGH,KAAK,CAACG,WAApB;AACH;;AAED,MAAIH,KAAK,CAACK,MAAN,IAAgB,IAApB,EAA0B;AACtBA,IAAAA,MAAM,GAAG,QAAT;AACAH,IAAAA,WAAW,GAAG,EAAd;AACH;;AAED,MAAIU,OAAO,GACP;AAAK,IAAA,SAAS,EAAEZ,KAAK,CAACa,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMb,KAAK,CAACc,KAAN,IAAe,IAAhB,GACE;AAAO,IAAA,SAAS,EAAE,4CAA4C,QAA5C,GAAuDb,KAAvD,GAA+D,QAA/D,GAA0EK,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoGN,KAAK,CAACc,KAA1G,CADF,GAEC,IAHN,EAII;AACI,IAAA,IAAI,EAAC,GADT;AACa,IAAA,IAAI,EAAC,IADlB;AAEI,IAAA,SAAS,EAAE,qBAAqBT,MAArB,GAA8BH,WAA9B,GAA4C,YAA5C,GAA2DE,MAA3D,GAAoE,oGAFnF;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAEJ,KAAK,CAACe,QAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;;AAcA,SAAOH,OAAP;AACH,CAvDD;;AAyDA,eAAeb,OAAf","sourcesContent":["const TxtArea = props => {\r\n\r\n    let color = 'gray-900'\r\n    let borderColor = 'gray-300'\r\n    let placeholder = ''\r\n    let height = 12\r\n    let shadow = 'border border-'\r\n\r\n    if (props.align != null) {\r\n        align = props.align\r\n    }\r\n\r\n    if (props.color != null) {\r\n        color = props.color\r\n    }\r\n\r\n    if (props.height != null) {\r\n        height = props.height\r\n    }\r\n\r\n    if (props.error == true) {\r\n        borderColor = 'red-600'\r\n        color = 'red-600'\r\n    }\r\n\r\n    if (props.reset == true) {\r\n        color = 'white'\r\n        borderColor = 'gray-300'\r\n        inputRef.current.value = ''\r\n    }\r\n\r\n    if (props.placeholder != null) {\r\n        placeholder = props.placeholder\r\n    }\r\n\r\n    if (props.shadow == true) {\r\n        shadow = 'shadow'\r\n        borderColor = ''\r\n    }\r\n\r\n    let content = (\r\n        <div className={props.className}>\r\n            {(props.label != null)\r\n            ? (<label className={'w-full block mb-1 font-sans font-medium' + ' text-' + color + ' text-' + align}>{props.label}</label>)\r\n            : null}\r\n            <textarea\r\n                rows=\"4\" cols=\"50\"\r\n                className={'appearance-none ' + shadow + borderColor + ' w-full h-' + height + ' py-2 px-3 font-sans font-medium text-gray-700 leading-tight focus:outline-none focus:border-black'}\r\n                type=\"text\"\r\n                onChange={props.onChange}\r\n            />\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default TxtArea"]},"metadata":{},"sourceType":"module"}