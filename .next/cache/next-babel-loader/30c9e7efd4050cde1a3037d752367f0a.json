{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\graphics\\\\category\\\\SelectCategory.js\";\n\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport useSWR from 'swr';\nimport { getCategories } from '../../../services/api/fetch/getCategories';\n\nfunction dataList(lvl, parent, csrftoken) {\n  var _useSWR = useSWR('categories', getCategories(lvl, parent, csrftoken)),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  return {\n    data: data,\n    error: error\n  };\n}\n\nvar SelectCategory = function SelectCategory(props) {\n  var selectedRef = useRef();\n\n  var _dataList = dataList(lvl, parent, csrftoken),\n      data = _dataList.data,\n      error = _dataList.error;\n\n  if (!data) return __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  }, \"loading ...\");\n  var options = JSON.parse(data).map(function (option) {\n    return __jsx(\"option\", {\n      key: option.id,\n      value: option.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    });\n  });\n\n  var getOption = function getOption() {\n    var value = selectedRef.current.value;\n    JSON.parse(data).map(function (option) {\n      if (option.name == value) {\n        props.setCategory(option.id, option.value, props.lvl);\n      }\n    });\n  };\n\n  var content = __jsx(\"div\", {\n    className: props.className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"border border-1 p-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"font-sans font-medium text-gray-700 leading-tight hover:outline-none focus:outline-none\",\n    ref: selectedRef,\n    list: \"data\",\n    onChange: getOption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(\"datalist\", {\n    id: \"data\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, options)));\n\n  return content;\n};\n\nexport default SelectCategory;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/graphics/category/SelectCategory.js"],"names":["React","useRef","useSWR","getCategories","dataList","lvl","parent","csrftoken","data","error","SelectCategory","props","selectedRef","options","JSON","parse","map","option","id","name","getOption","value","current","setCategory","content","className"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,aAAT,QAA8B,2CAA9B;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,MAAvB,EAA+BC,SAA/B,EAA0C;AAAA,gBACdL,MAAM,CAAC,YAAD,EAAeC,aAAa,CAACE,GAAD,EAAMC,MAAN,EAAcC,SAAd,CAA5B,CADQ;AAAA,MAC9BC,IAD8B,WAC9BA,IAD8B;AAAA,MACxBC,KADwB,WACxBA,KADwB;;AAGtC,SAAO;AACHD,IAAAA,IAAI,EAAEA,IADH;AAEHC,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH;;AAED,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAE5B,MAAMC,WAAW,GAAGX,MAAM,EAA1B;;AAF4B,kBAIJG,QAAQ,CAACC,GAAD,EAAMC,MAAN,EAAcC,SAAd,CAJJ;AAAA,MAIpBC,IAJoB,aAIpBA,IAJoB;AAAA,MAIdC,KAJc,aAIdA,KAJc;;AAM5B,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAEX,MAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWP,IAAX,EAAiBQ,GAAjB,CAAqB,UAACC,MAAD,EAAY;AAC7C,WAAO;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,MAAA,KAAK,EAAED,MAAM,CAACE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFe,CAAhB;;AAIA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,QAAIC,KAAK,GAAGT,WAAW,CAACU,OAAZ,CAAoBD,KAAhC;AACAP,IAAAA,IAAI,CAACC,KAAL,CAAWP,IAAX,EAAiBQ,GAAjB,CAAqB,UAACC,MAAD,EAAY;AAC7B,UAAIA,MAAM,CAACE,IAAP,IAAeE,KAAnB,EAA0B;AACtBV,QAAAA,KAAK,CAACY,WAAN,CAAkBN,MAAM,CAACC,EAAzB,EAA6BD,MAAM,CAACI,KAApC,EAA2CV,KAAK,CAACN,GAAjD;AACH;AACJ,KAJD;AAKH,GAPD;;AASA,MAAImB,OAAO,GACP;AAAK,IAAA,SAAS,EAAEb,KAAK,CAACc,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,yFAAjB;AAA2G,IAAA,GAAG,EAAEb,WAAhH;AAA6H,IAAA,IAAI,EAAC,MAAlI;AAAyI,IAAA,QAAQ,EAAEQ,SAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAU,IAAA,EAAE,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,OADL,CAFJ,CADJ,CADJ;;AAWA,SAAOW,OAAP;AACH,CAjCD;;AAmCA,eAAed,cAAf","sourcesContent":["import React, { useRef } from 'react'\r\nimport useSWR from 'swr'\r\nimport { getCategories } from '../../../services/api/fetch/getCategories'\r\n\r\nfunction dataList(lvl, parent, csrftoken) {\r\n    const { data, error } = useSWR('categories', getCategories(lvl, parent, csrftoken))\r\n\r\n    return {\r\n        data: data,\r\n        error: error\r\n    }\r\n}\r\n\r\nconst SelectCategory = props => {\r\n    \r\n    const selectedRef = useRef()\r\n\r\n    const { data, error } = dataList(lvl, parent, csrftoken)\r\n\r\n    if (!data) return <h3>loading ...</h3>\r\n\r\n    const options = JSON.parse(data).map((option) => {\r\n        return <option key={option.id} value={option.name} />\r\n    })\r\n\r\n    const getOption = () => {\r\n        let value = selectedRef.current.value\r\n        JSON.parse(data).map((option) => {\r\n            if (option.name == value) {\r\n                props.setCategory(option.id, option.value, props.lvl)\r\n            }\r\n        })\r\n    }\r\n\r\n    let content = (\r\n        <div className={props.className}>\r\n            <div className=\"border border-1 p-1\">\r\n                <input className=\"font-sans font-medium text-gray-700 leading-tight hover:outline-none focus:outline-none\" ref={selectedRef} list=\"data\" onChange={getOption} />\r\n                <datalist id=\"data\">\r\n                    {options}\r\n                </datalist>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default SelectCategory"]},"metadata":{},"sourceType":"module"}