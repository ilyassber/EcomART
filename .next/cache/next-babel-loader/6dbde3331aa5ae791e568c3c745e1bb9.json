{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\graphics\\\\category\\\\SelectCategory.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport useSWR from 'swr';\nimport { getCategories } from '../../../services/api/fetch/getCategories';\n\nconst SelectCategory = props => {\n  const selectedRef = useRef();\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  let content = null;\n  useEffect(() => {\n    getCategories(props.lvl, props.parent, props.csrftoken).then(res => {\n      console.log(res);\n      setData(JSON.stringify(res));\n    });\n  }, []);\n\n  if (data) {\n    const options = JSON.parse(data).map(option => {\n      return __jsx(\"option\", {\n        key: option.id,\n        value: option.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }\n      });\n    });\n\n    const getOption = () => {\n      let value = selectedRef.current.value;\n      JSON.parse(data).map(option => {\n        if (option.name == value) {\n          props.setCategory(option);\n        }\n      });\n    };\n\n    content = __jsx(\"div\", {\n      className: props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      className: \"font-sans font-medium text-gray-700 leading-tight hover:outline-none focus:outline-none\",\n      ref: selectedRef,\n      list: \"data\",\n      onChange: getOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), __jsx(\"datalist\", {\n      id: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, options));\n  }\n\n  return content;\n};\n\nexport default SelectCategory;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/graphics/category/SelectCategory.js"],"names":["React","useState","useEffect","useRef","useSWR","getCategories","SelectCategory","props","selectedRef","data","setData","content","lvl","parent","csrftoken","then","res","console","log","JSON","stringify","options","parse","map","option","id","name","getOption","value","current","setCategory","className"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,aAAT,QAA8B,2CAA9B;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAE5B,QAAMC,WAAW,GAAGL,MAAM,EAA1B;AACA,QAAM;AAAA,OAACM,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,EAAhC;AAEA,MAAIU,OAAO,GAAG,IAAd;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,aAAa,CAACE,KAAK,CAACK,GAAP,EAAYL,KAAK,CAACM,MAAlB,EAA0BN,KAAK,CAACO,SAAhC,CAAb,CAAwDC,IAAxD,CAA8DC,GAAD,IAAS;AAClEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,MAAAA,OAAO,CAACS,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAD,CAAP;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAIP,IAAJ,EAAU;AACN,UAAMY,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAWb,IAAX,EAAiBc,GAAjB,CAAsBC,MAAD,IAAY;AAC7C,aAAO;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,QAAA,KAAK,EAAED,MAAM,CAACE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFe,CAAhB;;AAIA,UAAMC,SAAS,GAAG,MAAM;AACpB,UAAIC,KAAK,GAAGpB,WAAW,CAACqB,OAAZ,CAAoBD,KAAhC;AACAT,MAAAA,IAAI,CAACG,KAAL,CAAWb,IAAX,EAAiBc,GAAjB,CAAsBC,MAAD,IAAY;AAC7B,YAAIA,MAAM,CAACE,IAAP,IAAeE,KAAnB,EAA0B;AACtBrB,UAAAA,KAAK,CAACuB,WAAN,CAAkBN,MAAlB;AACH;AACJ,OAJD;AAKH,KAPD;;AASAb,IAAAA,OAAO,GACH;AAAK,MAAA,SAAS,EAAEJ,KAAK,CAACwB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,yFAAjB;AAA2G,MAAA,GAAG,EAAEvB,WAAhH;AAA6H,MAAA,IAAI,EAAC,MAAlI;AAAyI,MAAA,QAAQ,EAAEmB,SAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAU,MAAA,EAAE,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,OADL,CAFJ,CADJ;AAQH;;AAED,SAAOV,OAAP;AACH,CAvCD;;AAyCA,eAAeL,cAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport useSWR from 'swr'\r\nimport { getCategories } from '../../../services/api/fetch/getCategories'\r\n\r\nconst SelectCategory = props => {\r\n\r\n    const selectedRef = useRef()\r\n    const [data, setData] = useState()\r\n\r\n    let content = null\r\n\r\n    useEffect(() => {\r\n        getCategories(props.lvl, props.parent, props.csrftoken).then((res) => {\r\n            console.log(res)\r\n            setData(JSON.stringify(res))\r\n        })\r\n    }, [])\r\n\r\n    if (data) {\r\n        const options = JSON.parse(data).map((option) => {\r\n            return <option key={option.id} value={option.name} />\r\n        })\r\n\r\n        const getOption = () => {\r\n            let value = selectedRef.current.value\r\n            JSON.parse(data).map((option) => {\r\n                if (option.name == value) {\r\n                    props.setCategory(option)\r\n                }\r\n            })\r\n        }\r\n\r\n        content = (\r\n            <div className={props.className}>\r\n                <input className=\"font-sans font-medium text-gray-700 leading-tight hover:outline-none focus:outline-none\" ref={selectedRef} list=\"data\" onChange={getOption} />\r\n                <datalist id=\"data\">\r\n                    {options}\r\n                </datalist>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return content\r\n}\r\n\r\nexport default SelectCategory"]},"metadata":{},"sourceType":"module"}