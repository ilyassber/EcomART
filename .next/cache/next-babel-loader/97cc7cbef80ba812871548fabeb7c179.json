{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\graphics\\\\category\\\\SelectCategory.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getCategories } from '../../../services/api/fetch/getCategories';\n\nvar SelectCategory = function SelectCategory(props) {\n  var selectedRef = useRef();\n\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var currentLvl = null;\n  var currentParent = null;\n  var content = null;\n\n  var getData = function getData() {\n    setData(null);\n\n    if (props.all == true) {\n      var tags = localStorage.getItem('_tags');\n\n      if (tags == null) {\n        getCategories(null, null, props.csrftoken).then(function (res) {\n          localStorage.setItem('_tags', JSON.stringify(res));\n          setData(JSON.stringify(res));\n        });\n      } else {\n        setData(rags);\n      }\n    } else {\n      getCategories(currentLvl, props.parent, props.csrftoken).then(function (res) {\n        setData(JSON.stringify(res));\n      });\n    }\n  };\n\n  useEffect(function () {\n    currentLvl = props.lvl;\n    currentParent = props.parent;\n    getData();\n  }, []);\n\n  if (data && JSON.parse(data).length > 0) {\n    var options = JSON.parse(data).map(function (option) {\n      return __jsx(\"option\", {\n        key: option.id,\n        value: option.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 20\n        }\n      });\n    });\n\n    var getOption = function getOption() {\n      var value = selectedRef.current.value;\n      JSON.parse(data).map(function (option) {\n        if (option.name == value) {\n          props.setCategory(option);\n          currentLvl = option.lvl + 1;\n          getData();\n        }\n      });\n    };\n\n    content = __jsx(\"div\", {\n      className: props.className,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"h-8 flex\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"h-full w-auto content-center mx-auto flex flex-wrap font-sans font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, __jsx(\"b\", {\n      className: \"text-gray-900 text-sm text-center ml-2 mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, props.separator)), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      className: \"h-8 w-auto font-sans font-medium border text-gray-700 leading-tight hover:outline-none focus:outline-none p-1\",\n      ref: selectedRef,\n      list: \"data\",\n      onChange: getOption,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), __jsx(\"datalist\", {\n      id: \"data\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, options))));\n  }\n\n  return content;\n};\n\nexport default SelectCategory;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/graphics/category/SelectCategory.js"],"names":["React","useState","useEffect","useRef","getCategories","SelectCategory","props","selectedRef","data","setData","currentLvl","currentParent","content","getData","all","tags","localStorage","getItem","csrftoken","then","res","setItem","JSON","stringify","rags","parent","lvl","parse","length","options","map","option","id","name","getOption","value","current","setCategory","className","separator"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { getCategories } from '../../../services/api/fetch/getCategories'\r\n\r\nconst SelectCategory = props => {\r\n\r\n    const selectedRef = useRef()\r\n    const [data, setData] = useState()\r\n    let currentLvl = null\r\n    let currentParent = null\r\n    let content = null\r\n\r\n    const getData = () => {\r\n        setData(null)\r\n        if (props.all == true) {\r\n            let tags = localStorage.getItem('_tags')\r\n            if (tags == null) {\r\n                getCategories(null, null, props.csrftoken).then((res) => {\r\n                    localStorage.setItem('_tags', JSON.stringify(res))\r\n                    setData(JSON.stringify(res))\r\n                })\r\n            } else {\r\n                setData(rags)\r\n            }\r\n        } else {\r\n            getCategories(currentLvl, props.parent, props.csrftoken).then((res) => {\r\n                setData(JSON.stringify(res))\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        currentLvl = props.lvl\r\n        currentParent = props.parent\r\n        getData()\r\n    }, [])\r\n\r\n    if (data && JSON.parse(data).length > 0) {\r\n\r\n        const options = JSON.parse(data).map((option) => {\r\n            return <option key={option.id} value={option.name} />\r\n        })\r\n\r\n        const getOption = () => {\r\n            let value = selectedRef.current.value\r\n            JSON.parse(data).map((option) => {\r\n                if (option.name == value) {\r\n                    props.setCategory(option)\r\n                    currentLvl = option.lvl + 1\r\n                    getData()\r\n                }\r\n            })\r\n        }\r\n\r\n        content = (\r\n            <div className={props.className}>\r\n                <div className=\"h-8 flex\">\r\n                <div className=\"h-full w-auto content-center mx-auto flex flex-wrap font-sans font-bold\">\r\n                    <b className=\"text-gray-900 text-sm text-center ml-2 mr-2\">\r\n                        {props.separator}\r\n                    </b>\r\n                </div>\r\n                <div>\r\n                <input\r\n                    className=\"h-8 w-auto font-sans font-medium border text-gray-700 leading-tight hover:outline-none focus:outline-none p-1\"\r\n                    ref={selectedRef}\r\n                    list=\"data\"\r\n                    onChange={getOption} />\r\n                <datalist id=\"data\">\r\n                    {options}\r\n                </datalist>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return content\r\n}\r\n\r\nexport default SelectCategory"]},"metadata":{},"sourceType":"module"}