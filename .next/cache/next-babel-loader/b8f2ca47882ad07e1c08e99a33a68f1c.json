{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { parseCookies } from '../../lib/parseCookies';\nimport { useRouter } from \"next/router\";\nimport ArticleDisplayer from '../../components/elements/article/ArticleDisplayer';\nimport querystring from 'querystring';\nimport { postRequest } from '../../services/api/post/postRequest';\nimport { getRequest } from '../../services/api/get/getRequest';\nimport { strict } from 'assert';\nimport Layout from '../../components/layout';\n\nconst Story = props => {\n  let content = __jsx(Layout, {\n    tags: props.tags\n  }, __jsx(\"div\", {\n    className: \"w-full h-auto bg-white\"\n  }, __jsx(ArticleDisplayer, {\n    story: props.story\n  })));\n\n  return content;\n};\n\nexport async function getStaticPaths() {\n  const stories = await getRequest(process.env.domain + '/api/articles/').then(res => {\n    return res;\n  });\n  const paths = stories.map(story => `/stories/${story.url}`);\n  console.log(paths);\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  console.log(context);\n  let current = context.params.story;\n  let id = current.split('-')[0];\n  const story = await getRequest(process.env.domain + '/api/articles/' + id).then(res => {\n    console.log(res);\n    return res;\n  }).catch(err => {\n    return null;\n  });\n  const tags = await getRequest(process.env.domain + '/api/categories/').then(res => {\n    return res;\n  });\n  return {\n    props: {\n      story: story,\n      tags: tags\n    }\n  };\n}\nexport default Story;","map":null,"metadata":{},"sourceType":"module"}