{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\pages\\\\maker\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { parseCookies } from '../../lib/parseCookies';\nimport { Navbar, SideBar } from '../../components/elements/bar';\nimport { ProductGrid } from '../../components/widgets/product';\nimport ProductGridList from '../../components/elements/list/ProductGridList';\nimport { AddProduct } from '../../components/elements/product';\n\nconst UserPage = props => {\n  console.log(props.cookies);\n  console.log(props.data);\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: clikced,\n    1: setClicked\n  } = useState(0);\n  useEffect(() => {\n    console.log('useEffect runs');\n    setIsLoading(true);\n    axios.defaults.withCredentials = true;\n\n    if (props.cookies.utoken != null) {\n      axios.get('http://localhost:8000/products/').then(res => {\n        console.log(res.data);\n        setData(JSON.stringify(res.data));\n        setIsLoading(false);\n      });\n    } else {\n      window.location = '/maker/auth';\n    }\n  }, []);\n\n  let content = __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Loading characters...\");\n\n  if (!isLoading && data && data.length > 0) {\n    console.log(data);\n    const productsList = JSON.parse(data).map(function (product) {\n      return __jsx(ProductGrid, {\n        className: \"h-auto w-auto m-2\",\n        key: product.id,\n        data: product,\n        owner: \"ilyass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 14\n        }\n      });\n    });\n    const sideBarData = [{\n      id: 0,\n      value: 'Products'\n    }, {\n      id: 1,\n      value: 'Add Product'\n    }];\n\n    let comp1 = __jsx(ProductGridList, {\n      className: \"p-2\",\n      data: productsList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }\n    });\n\n    let comp2 = __jsx(AddProduct, {\n      cookies: props.cookies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }\n    });\n\n    const componentsList = [comp1, comp2];\n    content = __jsx(\"div\", {\n      className: \"w-full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, __jsx(Navbar, {\n      cookies: props.cookies,\n      className: \"w-full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"w-full flex pt-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"w-64 h-full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, __jsx(SideBar, {\n      className: \"w-full h-full\",\n      clicked: clikced,\n      data: sideBarData,\n      onClick: x => setClicked(x),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: \"w-full h-full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, componentsList[clikced])));\n  } else if (!isLoading && (!data || data.length === 0)) {\n    content = __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"Could not fetch any data.\");\n  }\n\n  return content;\n};\n\nUserPage.getInitialProps = ({\n  req\n}) => {\n  const cookies = parseCookies(req);\n  return {\n    cookies: cookies,\n    data: req.data\n  };\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/pages/maker/index.js"],"names":["React","useState","useEffect","axios","parseCookies","Navbar","SideBar","ProductGrid","ProductGridList","AddProduct","UserPage","props","console","log","cookies","data","setData","isLoading","setIsLoading","clikced","setClicked","defaults","withCredentials","utoken","get","then","res","JSON","stringify","window","location","content","length","productsList","parse","map","product","id","sideBarData","value","comp1","comp2","componentsList","x","getInitialProps","req"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { parseCookies } from '../../lib/parseCookies'\r\nimport { Navbar, SideBar } from '../../components/elements/bar'\r\nimport { ProductGrid } from '../../components/widgets/product'\r\nimport ProductGridList from '../../components/elements/list/ProductGridList'\r\nimport { AddProduct } from '../../components/elements/product'\r\n\r\nconst UserPage = props => {\r\n\r\n  console.log(props.cookies)\r\n  console.log(props.data)\r\n\r\n  const [data, setData] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [clikced, setClicked] = useState(0)\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect runs');\r\n    setIsLoading(true);\r\n    axios.defaults.withCredentials = true\r\n    if (props.cookies.utoken != null) {\r\n      axios.get('http://localhost:8000/products/')\r\n        .then(res => {\r\n          console.log(res.data)\r\n          setData(JSON.stringify(res.data));\r\n          setIsLoading(false);\r\n        })\r\n    } else {\r\n      window.location = '/maker/auth'\r\n    }\r\n  }, []);\r\n\r\n  let content = <p>Loading characters...</p>;\r\n\r\n  if (!isLoading && data && data.length > 0) {\r\n    console.log(data)\r\n    const productsList = JSON.parse(data).map(function (product) {\r\n      return <ProductGrid className=\"h-auto w-auto m-2\" key={product.id} data={product} owner=\"ilyass\" />\r\n    })\r\n\r\n    const sideBarData = [{ id: 0, value: 'Products' }, { id: 1, value: 'Add Product' }]\r\n    let comp1 = (<ProductGridList className=\"p-2\" data={productsList} />)\r\n    let comp2 = (<AddProduct cookies={props.cookies} />)\r\n    const componentsList = [\r\n      comp1,\r\n      comp2\r\n    ]\r\n\r\n    content = (\r\n      <div className=\"w-full\">\r\n        <Navbar cookies={props.cookies} className=\"w-full\" />\r\n        <div className=\"w-full flex pt-10\">\r\n          <div className=\"w-64 h-full\">\r\n            <SideBar className=\"w-full h-full\" clicked={clikced} data={sideBarData} onClick={(x) => setClicked(x)} />\r\n          </div>\r\n          <div className=\"w-full h-full\">\r\n            {componentsList[clikced]}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (!isLoading && (!data || data.length === 0)) {\r\n    content = <p>Could not fetch any data.</p>;\r\n  }\r\n  return content;\r\n};\r\n\r\nUserPage.getInitialProps = ({ req }) => {\r\n  const cookies = parseCookies(req);\r\n\r\n  return {\r\n    cookies: cookies,\r\n    data: req.data\r\n  };\r\n};\r\n\r\nexport default UserPage;"]},"metadata":{},"sourceType":"module"}