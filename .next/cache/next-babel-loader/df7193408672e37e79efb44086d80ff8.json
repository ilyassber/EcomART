{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\graphics\\\\category\\\\SelectCategory.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getCategories } from '../../../services/api/fetch/getCategories';\n\nconst SelectCategory = props => {\n  const selectedRef = useRef();\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  let currentLvl = null;\n  let currentParent = null;\n  let content = null;\n\n  const getData = () => {\n    setData(null);\n    getCategories(currentLvl, props.parent, props.csrftoken).then(res => {\n      setData(JSON.stringify(res));\n    });\n  };\n\n  useEffect(() => {\n    currentLvl = props.lvl;\n    currentParent = props.parent;\n    getData();\n  }, []);\n\n  if (data && JSON.parse(data).length > 0) {\n    const options = JSON.parse(data).map(option => {\n      return __jsx(\"option\", {\n        key: option.id,\n        value: option.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }\n      });\n    });\n\n    const getOption = () => {\n      let value = selectedRef.current.value;\n      JSON.parse(data).map(option => {\n        if (option.name == value) {\n          props.setCategory(option);\n          currentLvl = option.lvl + 1;\n          getData();\n        }\n      });\n    };\n\n    content = __jsx(\"div\", {\n      className: props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"h-8 flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"h-full w-auto content-center mx-auto flex flex-wrap font-sans font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, __jsx(\"b\", {\n      className: \"text-gray-900 text-sm text-center ml-2 mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, props.separator)), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      className: \"h-8 w-auto font-sans font-medium border text-gray-700 leading-tight hover:outline-none focus:outline-none p-1\",\n      ref: selectedRef,\n      list: \"data\",\n      onChange: getOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), __jsx(\"datalist\", {\n      id: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, options))));\n  }\n\n  return content;\n};\n\nexport default SelectCategory;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/graphics/category/SelectCategory.js"],"names":["React","useState","useEffect","useRef","getCategories","SelectCategory","props","selectedRef","data","setData","currentLvl","currentParent","content","getData","parent","csrftoken","then","res","JSON","stringify","lvl","parse","length","options","map","option","id","name","getOption","value","current","setCategory","className","separator"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { getCategories } from '../../../services/api/fetch/getCategories'\r\n\r\nconst SelectCategory = props => {\r\n\r\n    const selectedRef = useRef()\r\n    const [data, setData] = useState()\r\n    let currentLvl = null\r\n    let currentParent = null\r\n    let content = null\r\n\r\n    const getData = () => {\r\n        setData(null)\r\n        getCategories(currentLvl, props.parent, props.csrftoken).then((res) => {\r\n            setData(JSON.stringify(res))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        currentLvl = props.lvl\r\n        currentParent = props.parent\r\n        getData()\r\n    }, [])\r\n\r\n    if (data && JSON.parse(data).length > 0) {\r\n\r\n        const options = JSON.parse(data).map((option) => {\r\n            return <option key={option.id} value={option.name} />\r\n        })\r\n\r\n        const getOption = () => {\r\n            let value = selectedRef.current.value\r\n            JSON.parse(data).map((option) => {\r\n                if (option.name == value) {\r\n                    props.setCategory(option)\r\n                    currentLvl = option.lvl + 1\r\n                    getData()\r\n                }\r\n            })\r\n        }\r\n\r\n        content = (\r\n            <div className={props.className}>\r\n                <div className=\"h-8 flex\">\r\n                <div className=\"h-full w-auto content-center mx-auto flex flex-wrap font-sans font-bold\">\r\n                    <b className=\"text-gray-900 text-sm text-center ml-2 mr-2\">\r\n                        {props.separator}\r\n                    </b>\r\n                </div>\r\n                <div>\r\n                <input\r\n                    className=\"h-8 w-auto font-sans font-medium border text-gray-700 leading-tight hover:outline-none focus:outline-none p-1\"\r\n                    ref={selectedRef}\r\n                    list=\"data\"\r\n                    onChange={getOption} />\r\n                <datalist id=\"data\">\r\n                    {options}\r\n                </datalist>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return content\r\n}\r\n\r\nexport default SelectCategory"]},"metadata":{},"sourceType":"module"}