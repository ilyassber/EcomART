{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { parseCookies } from '../../lib/parseCookies';\nimport { getRequest } from '../../services/api/get/getRequest';\nimport WaitList from '../../components/elements/discuss/WaitList';\nimport Layout from '../../components/layout';\n\nvar Regions = function Regions(props) {\n  var content = __jsx(Layout, {\n    tags: props.tags\n  }, __jsx(\"div\", {\n    className: \"w-full flex flex-col items-center\"\n  }, __jsx(\"div\", {\n    className: \"w-full h-full max-w-screen-sm flex flex-wrap flex-col items-center content-center my-10\"\n  }, __jsx(WaitList, {\n    className: \"w-full px-2\",\n    csrf: props.cookies['csrftoken']\n  }))));\n\n  return content;\n};\n\nRegions.getInitialProps = function _callee(_ref) {\n  var req, cookies, tags;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req;\n          cookies = parseCookies(req);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getRequest(process.env.domain + '/api/categories/').then(function (res) {\n            return res;\n          }));\n\n        case 4:\n          tags = _context.sent;\n          return _context.abrupt(\"return\", {\n            cookies: cookies,\n            tags: tags\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Regions;","map":null,"metadata":{},"sourceType":"module"}