{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\elements\\\\article\\\\AddArticle.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { TxtField, TxtArea } from '../../graphics/textFields';\nimport { BtnBbw } from '../../graphics/buttons';\nimport { uploadImage } from '../../../services/api/uploadImage';\nimport { AddContent } from '../../widgets/article';\nimport AddSingleImage from '../../widgets/image/AddSingleImage';\n\nconst AddArticle = props => {\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    title: null,\n    description: null,\n    cover: null,\n    text: []\n  });\n\n  const getValue = (event, access) => {\n    if (access == 'title') {\n      setData(_objectSpread({}, data, {\n        title: event.target.value\n      }));\n    } else if (access == 'description') {\n      setData(_objectSpread({}, data, {\n        description: event.target.value\n      }));\n    }\n  };\n\n  const addCover = file => {\n    setData(_objectSpread({}, data, {\n      cover: file\n    }));\n  };\n\n  const removeCover = () => {\n    setData(_objectSpread({}, data, {\n      cover: null\n    }));\n  };\n\n  const appendContent = content => {\n    let contentList = data.text;\n    contentList.push(content);\n    setData(_objectSpread({}, data, {\n      text: contentList\n    }));\n  };\n\n  const editContent = (index, content) => {\n    let contentList = data.text;\n    contentList[index] = content;\n    setData(_objectSpread({}, data, {\n      text: contentList\n    }));\n  };\n\n  const removeContent = index => {\n    let contentList = data.text;\n    contentList.splice(index, 1);\n    setData(_objectSpread({}, data, {\n      text: contentList\n    }));\n  };\n\n  const handleSubmit = async event => {\n    /*\r\n    event.preventDefault()\r\n    for (let i = 0; i < files.length; i++) {\r\n        let response = await uploadImage(event, files[0], props.cookies['csrftoken']).then((res) => res)\r\n        data['pics_list'].push(response.data)\r\n    }\r\n    addProduct(data, props.cookies['csrftoken']).then((res) => {\r\n        console.log(res)\r\n    })\r\n    */\n  };\n\n  let content = __jsx(\"div\", {\n    className: \"m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    className: \"w-full\",\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(TxtField, {\n    label: \"Title\",\n    onChange: event => getValue(event, 'title'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), __jsx(TxtArea, {\n    label: \"Description\",\n    onChange: event => getValue(event, 'description'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"h-auto w-full border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, data.text.map((content, index) => {\n    return __jsx(AddSingleImage, {\n      index: index,\n      className: \"w-full pb-1/2\",\n      data: content,\n      editContent: editContent,\n      removeContent: removeContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    });\n  }), __jsx(AddContent, {\n    className: \"m-2\",\n    appendContent: appendContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })), __jsx(BtnBbw, {\n    className: \"w-full h-12 mt-8 mb-4\",\n    value: \"ADD ARTICLE\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })));\n\n  return content;\n};\n\nexport default AddArticle;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/elements/article/AddArticle.js"],"names":["React","useState","useEffect","TxtField","TxtArea","BtnBbw","uploadImage","AddContent","AddSingleImage","AddArticle","props","data","setData","title","description","cover","text","getValue","event","access","target","value","addCover","file","removeCover","appendContent","content","contentList","push","editContent","index","removeContent","splice","handleSubmit","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { TxtField, TxtArea } from '../../graphics/textFields'\r\nimport { BtnBbw } from '../../graphics/buttons'\r\nimport { uploadImage } from '../../../services/api/uploadImage'\r\nimport { AddContent } from '../../widgets/article'\r\nimport AddSingleImage from '../../widgets/image/AddSingleImage'\r\n\r\nconst AddArticle = props => {\r\n\r\n    const [data, setData] = useState({\r\n        title: null,\r\n        description: null,\r\n        cover: null,\r\n        text: []\r\n    })\r\n\r\n    const getValue = (event, access) => {\r\n        if (access == 'title') {\r\n            setData({...data, title: event.target.value})\r\n        } else if (access == 'description') {\r\n            setData({...data, description: event.target.value})\r\n        }\r\n    }\r\n\r\n    const addCover = (file) => {\r\n        setData({...data, cover: file})\r\n    }\r\n\r\n    const removeCover = () => {\r\n        setData({...data, cover: null})\r\n    }\r\n\r\n    const appendContent = (content) => {\r\n        let contentList = data.text\r\n        contentList.push(content)\r\n        setData({...data, text: contentList})\r\n    }\r\n\r\n    const editContent = (index, content) => {\r\n        let contentList = data.text\r\n        contentList[index] = content\r\n        setData({...data, text: contentList})\r\n    }\r\n\r\n    const removeContent = (index) => {\r\n        let contentList = data.text\r\n        contentList.splice(index, 1)\r\n        setData({...data, text: contentList})\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        /*\r\n        event.preventDefault()\r\n        for (let i = 0; i < files.length; i++) {\r\n            let response = await uploadImage(event, files[0], props.cookies['csrftoken']).then((res) => res)\r\n            data['pics_list'].push(response.data)\r\n        }\r\n        addProduct(data, props.cookies['csrftoken']).then((res) => {\r\n            console.log(res)\r\n        })\r\n        */\r\n    }\r\n\r\n    let content = (\r\n        <div className=\"m-4\">\r\n            <form className=\"w-full\" action=\"\">\r\n                <TxtField label=\"Title\" onChange={(event) => getValue(event, 'title')} />\r\n                <TxtArea label=\"Description\" onChange={(event) => getValue(event, 'description')} />\r\n                <div className=\"h-auto w-full border\">\r\n                    {data.text.map((content, index) => {\r\n                        return (<AddSingleImage index={index} className=\"w-full pb-1/2\" data={content} editContent={editContent} removeContent={removeContent} />)\r\n                    })}\r\n                    <AddContent className=\"m-2\" appendContent={appendContent} />\r\n                </div>\r\n                <BtnBbw className=\"w-full h-12 mt-8 mb-4\" value=\"ADD ARTICLE\" onClick={handleSubmit} />\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default AddArticle"]},"metadata":{},"sourceType":"module"}