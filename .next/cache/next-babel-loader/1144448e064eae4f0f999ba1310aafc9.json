{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\widgets\\\\image\\\\AddImageGrid.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { AddImage, RemovedSquaredImg } from '../../graphics/images';\n\nvar AddImageGrid = function AddImageGrid(props) {\n  var _useState = useState(null),\n      imagesList = _useState[0],\n      setImagesList = _useState[1];\n\n  var appendFile = function appendFile(newFiles) {\n    if (newFiles.length > 0) {\n      props.addImage(newFiles);\n      initList();\n    }\n  };\n\n  var removeFile = function removeFile(index) {\n    props.removeImage(index);\n    initList();\n  };\n\n  var initList = function initList() {\n    if (props.files.length > 0) {\n      setImagesList(props.files.map(function (file, index) {\n        var imgSrc = (window.URL ? URL : webkitURL).createObjectURL(file);\n        console.log(index);\n        return __jsx(RemovedSquaredImg, {\n          className: \"w-32 h-32 m-1\",\n          src: imgSrc,\n          key: index,\n          index: index,\n          onRemove: removeFile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 24\n          }\n        });\n      }));\n    } else {\n      setImagesList(null);\n    }\n  };\n\n  var content = __jsx(\"div\", {\n    className: props.className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block mb-1 font-sans font-medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Add Product Images\"), __jsx(\"div\", {\n    className: \"h-auto w-full container flex content-start flex-wrap border py-2 px-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, imagesList, __jsx(AddImage, {\n    onChange: appendFile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }))));\n\n  return content;\n};\n\nexport default AddImageGrid;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/widgets/image/AddImageGrid.js"],"names":["React","useState","useEffect","AddImage","RemovedSquaredImg","AddImageGrid","props","imagesList","setImagesList","appendFile","newFiles","length","addImage","initList","removeFile","index","removeImage","files","map","file","imgSrc","window","URL","webkitURL","createObjectURL","console","log","content","className"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,uBAA5C;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,kBAEUL,QAAQ,CAAC,IAAD,CAFlB;AAAA,MAEnBM,UAFmB;AAAA,MAEPC,aAFO;;AAI1B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAc;AAC7B,QAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;AACrBL,MAAAA,KAAK,CAACM,QAAN,CAAeF,QAAf;AACAG,MAAAA,QAAQ;AACX;AACJ,GALD;;AAOA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC1BT,IAAAA,KAAK,CAACU,WAAN,CAAkBD,KAAlB;AACAF,IAAAA,QAAQ;AACX,GAHD;;AAKA,MAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,QAAIP,KAAK,CAACW,KAAN,CAAYN,MAAZ,GAAqB,CAAzB,EAA4B;AACxBH,MAAAA,aAAa,CAACF,KAAK,CAACW,KAAN,CAAYC,GAAZ,CAAgB,UAAUC,IAAV,EAAgBJ,KAAhB,EAAuB;AACjD,YAAMK,MAAM,GAAG,CAACC,MAAM,CAACC,GAAP,GAAaA,GAAb,GAAmBC,SAApB,EAA+BC,eAA/B,CAA+CL,IAA/C,CAAf;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACA,eAAO,MAAC,iBAAD;AAAmB,UAAA,SAAS,EAAC,eAA7B;AAA6C,UAAA,GAAG,EAAEK,MAAlD;AAA0D,UAAA,GAAG,EAAEL,KAA/D;AAAsE,UAAA,KAAK,EAAEA,KAA7E;AAAoF,UAAA,QAAQ,EAAED,UAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAJa,CAAD,CAAb;AAKH,KAND,MAMO;AACHN,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAVD;;AAYA,MAAImB,OAAO,GACP;AAAK,IAAA,SAAS,EAAErB,KAAK,CAACsB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,kCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAK,IAAA,SAAS,EAAC,uEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,UADL,EAEI,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADJ,CADJ;;AAYA,SAAOkB,OAAP;AACH,CAzCD;;AA2CA,eAAetB,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { AddImage, RemovedSquaredImg } from '../../graphics/images'\r\n\r\nconst AddImageGrid = props => {\r\n\r\n    const [imagesList, setImagesList] = useState(null)\r\n\r\n    const appendFile = (newFiles) => {\r\n        if (newFiles.length > 0) {\r\n            props.addImage(newFiles)\r\n            initList()\r\n        }\r\n    }\r\n\r\n    const removeFile = (index) => {\r\n        props.removeImage(index)\r\n        initList()\r\n    }\r\n\r\n    const initList = () => {\r\n        if (props.files.length > 0) {\r\n            setImagesList(props.files.map(function (file, index) {\r\n                const imgSrc = (window.URL ? URL : webkitURL).createObjectURL(file)\r\n                console.log(index)\r\n                return <RemovedSquaredImg className=\"w-32 h-32 m-1\" src={imgSrc} key={index} index={index} onRemove={removeFile}/>\r\n            }))\r\n        } else {\r\n            setImagesList(null)\r\n        }\r\n    }\r\n\r\n    let content = (\r\n        <div className={props.className}>\r\n            <div className=\"w-full\">\r\n                <label className=\"block mb-1 font-sans font-medium\">Add Product Images</label>\r\n                <div className=\"h-auto w-full container flex content-start flex-wrap border py-2 px-3\">\r\n                    {imagesList}\r\n                    <AddImage onChange={appendFile} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default AddImageGrid"]},"metadata":{},"sourceType":"module"}