{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\elements\\\\discuss\\\\LeaveMessage.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport react, { useState } from 'react';\nimport { Btn } from '../../graphics/buttons';\nimport { TxtArea, TxtField } from '../../graphics/textFields';\n\nconst LeaveMessage = props => {\n  const {\n    0: emailError,\n    1: setEmailError\n  } = useState(false);\n  const {\n    0: welcome,\n    1: setWelcome\n  } = useState('JOIN OUR NEWSLETTER');\n  const {\n    0: reset,\n    1: setReset\n  } = useState(false);\n  let email;\n  let message;\n\n  const handleEmailChange = event => {\n    email = event.target.value;\n  };\n\n  const handleMessageChange = event => {\n    message = event.target.value;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (email != null && email != '') {\n      const data = {\n        username: email.split('@')[0],\n        email: email,\n        role: 'wait_list'\n      };\n      registerUser(data, \"wait_list\", props.csrf).then(response => {\n        if (response.status === \"error\") {\n          setWelcome('Go Back Soon!');\n          console.log('error');\n        } else {\n          setWelcome('THANK YOU, GO BACK SOON!');\n          setReset(true);\n          console.log('success');\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      if (email == null || email == '') {\n        setEmailError(true);\n      }\n\n      if (num == null || num == '') {\n        setNumError(true);\n      }\n    }\n  };\n\n  let content = __jsx(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full h-full flex flex-col items-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(\"strong\", {\n    className: \"font-roboto font-black text-3xl text-white mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"LEAVE US A MESSAGE\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, __jsx(TxtField, {\n    reset: reset,\n    error: emailError,\n    borderColor: \"white\",\n    textColor: \"white\",\n    focusColor: \"white\",\n    bgColor: \"transparent\",\n    height: 10,\n    placeholder: \"EMAIL\",\n    placeholderColor: \"white\",\n    className: \"w-full max-w-64 mt-2\",\n    onChange: handleEmailChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), __jsx(TxtArea, {\n    reset: reset,\n    error: emailError,\n    borderColor: \"white\",\n    textColor: \"white\",\n    focusColor: \"white\",\n    bgColor: \"transparent\",\n    height: \"full\",\n    placeholder: \"Message...\",\n    placeholderColor: \"white\",\n    onChange: handleEmailChange,\n    className: \"w-full max-w-64 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"w-full h-auto flex flex-row-reverse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, __jsx(Btn, {\n    className: \"w-full h-auto\",\n    borderColor: \"white\",\n    bgColor: \"transparent\",\n    textColor: \"white\",\n    textSize: \"sm\",\n    textWeight: \"medium\",\n    hoverColor: \"gray-900\",\n    height: 10,\n    value: \"Send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })))));\n\n  return content;\n};\n\nexport default LeaveMessage;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/elements/discuss/LeaveMessage.js"],"names":["react","useState","Btn","TxtArea","TxtField","LeaveMessage","props","emailError","setEmailError","welcome","setWelcome","reset","setReset","email","message","handleEmailChange","event","target","value","handleMessageChange","handleSubmit","preventDefault","data","username","split","role","registerUser","csrf","then","response","status","console","log","catch","error","num","setNumError","content","className"],"mappings":"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","sourcesContent":["import react, { useState } from 'react'\r\nimport { Btn } from '../../graphics/buttons'\r\nimport { TxtArea, TxtField } from '../../graphics/textFields'\r\n\r\nconst LeaveMessage = props => {\r\n\r\n    const [emailError, setEmailError] = useState(false)\r\n    const [welcome, setWelcome] = useState('JOIN OUR NEWSLETTER')\r\n    const [reset, setReset] = useState(false)\r\n\r\n    let email;\r\n    let message;\r\n\r\n    const handleEmailChange = event => {\r\n        email = event.target.value\r\n    }\r\n\r\n    const handleMessageChange = event => {\r\n        message = event.target.value\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        if (email != null && email != '') {\r\n            const data = {\r\n                username: email.split('@')[0],\r\n                email: email,\r\n                role: 'wait_list'\r\n            }\r\n            registerUser(data, \"wait_list\", props.csrf).then((response) => {\r\n                if (response.status === \"error\") {\r\n                    setWelcome('Go Back Soon!')\r\n                    console.log('error')\r\n                }\r\n                else {\r\n                    setWelcome('THANK YOU, GO BACK SOON!')\r\n                    setReset(true)\r\n                    console.log('success')\r\n                }\r\n            })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n        } else {\r\n            if (email == null || email == '') {\r\n                setEmailError(true)\r\n            }\r\n            if (num == null || num == '') {\r\n                setNumError(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    let content = (\r\n        <div className={props.className} >\r\n            <div className=\"w-full h-full flex flex-col items-left\">\r\n                <strong className=\"font-roboto font-black text-3xl text-white mb-4\">LEAVE US A MESSAGE</strong>\r\n                <div>\r\n                    <TxtField\r\n                        reset={reset}\r\n                        error={emailError}\r\n                        borderColor='white'\r\n                        textColor='white'\r\n                        focusColor='white'\r\n                        bgColor='transparent'\r\n                        height={10}\r\n                        placeholder='EMAIL'\r\n                        placeholderColor='white'\r\n                        className=\"w-full max-w-64 mt-2\"\r\n                        onChange={handleEmailChange}\r\n                    />\r\n                    <TxtArea\r\n                        reset={reset}\r\n                        error={emailError}\r\n                        borderColor='white'\r\n                        textColor='white'\r\n                        focusColor='white'\r\n                        bgColor='transparent'\r\n                        height='full'\r\n                        placeholder='Message...'\r\n                        placeholderColor='white'\r\n                        onChange={handleEmailChange}\r\n                        className=\"w-full max-w-64 mt-2\"\r\n                    />\r\n                    <div className=\"w-full h-auto flex flex-row-reverse\">\r\n                        <Btn\r\n                            className='w-full h-auto'\r\n                            borderColor='white'\r\n                            bgColor='transparent'\r\n                            textColor='white'\r\n                            textSize='sm'\r\n                            textWeight='medium'\r\n                            hoverColor='gray-900'\r\n                            height={10}\r\n                            value='Send'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default LeaveMessage"]},"metadata":{},"sourceType":"module"}