{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport react, { useState } from 'react';\nimport { Btn } from '../../graphics/buttons';\nimport { TxtArea, TxtField } from '../../graphics/textFields';\nimport Cookies from 'js-cookie';\nimport { postRequest } from '../../../services/api/post/postRequest';\nimport querystring from 'querystring';\n\nconst LeaveMessage = props => {\n  const {\n    0: emailError,\n    1: setEmailError\n  } = useState(false);\n  const {\n    0: welcome,\n    1: setWelcome\n  } = useState('LEAVE US A MESSAGE');\n  const {\n    0: reset,\n    1: setReset\n  } = useState(false);\n  let email;\n  let message;\n\n  const handleEmailChange = event => {\n    email = event.target.value;\n  };\n\n  const handleMessageChange = event => {\n    message = event.target.value;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (email != null && email != '') {\n      let data = {\n        email: email,\n        text: message\n      };\n      let content = {\n        operation: 'register',\n        data: querystring.stringify(data)\n      };\n      postRequest(querystring.stringify(content), Cookies.get('csrftoken'), process.env.domain + '/api/messages/').then(response => {\n        console.log(response);\n\n        if (response.status === \"error\") {\n          setWelcome('Something Wrong!');\n          console.log('error');\n        } else {\n          setWelcome('THANK YOU!');\n          setReset(true);\n          console.log('success');\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      if (email == null || email == '') {\n        setEmailError(true);\n      }\n    }\n  };\n\n  let content = __jsx(\"div\", {\n    className: props.className\n  }, __jsx(\"div\", {\n    className: \"w-full h-full flex flex-col items-left\"\n  }, __jsx(\"strong\", {\n    className: \"font-roboto font-black text-3xl text-white mb-4\"\n  }, welcome), __jsx(\"div\", null, __jsx(TxtField, {\n    reset: reset,\n    disabled: reset,\n    error: emailError,\n    borderColor: \"white\",\n    textColor: \"white\",\n    focusColor: \"white\",\n    bgColor: \"transparent\",\n    disableColor: \"gray-900\",\n    height: 10,\n    placeholder: \"EMAIL\",\n    placeholderColor: \"white\",\n    className: \"w-full max-w-64 mt-2\",\n    onChange: handleEmailChange\n  }), __jsx(TxtArea, {\n    reset: reset,\n    disabled: reset,\n    borderColor: \"white\",\n    textColor: \"white\",\n    focusColor: \"white\",\n    bgColor: \"transparent\",\n    disableColor: \"gray-900\",\n    height: \"full\",\n    placeholder: \"Message...\",\n    placeholderColor: \"white\",\n    onChange: handleMessageChange,\n    className: \"w-full max-w-64 mt-2\"\n  }), __jsx(\"div\", {\n    className: \"w-full h-auto flex flex-row-reverse\"\n  }, __jsx(Btn, {\n    disabled: reset,\n    className: \"w-full h-auto\",\n    borderColor: \"white\",\n    bgColor: \"transparent\",\n    textColor: \"white\",\n    textSize: \"sm\",\n    textWeight: \"medium\",\n    hoverColor: \"gray-900\",\n    disableColor: \"gray-900\",\n    height: 10,\n    value: \"Send\",\n    onClick: handleSubmit\n  })))));\n\n  return content;\n};\n\nexport default LeaveMessage;","map":null,"metadata":{},"sourceType":"module"}