{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\graphics\\\\category\\\\SelectCategory.js\";\n\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport useSWR from 'swr';\n\nvar SelectCategory = function SelectCategory(props) {\n  var optionsRef = useRef();\n  var selectedRef = useRef();\n  var options = JSON.parse(props.data).map(function (option) {\n    return __jsx(\"option\", {\n      key: option.id,\n      value: option.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }\n    });\n  });\n\n  var getOption = function getOption() {\n    var value = selectedRef.current.value;\n    JSON.parse(props.data).map(function (option) {\n      if (option.name == value) {\n        props.setCategory(option.id, option.value, props.lvl);\n      }\n    });\n  };\n\n  var content = __jsx(\"div\", {\n    className: props.className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"border border-1 p-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"font-sans font-medium text-gray-700 leading-tight hover:outline-none focus:outline-none\",\n    ref: selectedRef,\n    list: \"data\",\n    onChange: getOption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), __jsx(\"datalist\", {\n    id: \"data\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, options)));\n\n  return content;\n};\n\nexport default SelectCategory;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/graphics/category/SelectCategory.js"],"names":["React","useRef","useSWR","SelectCategory","props","optionsRef","selectedRef","options","JSON","parse","data","map","option","id","name","getOption","value","current","setCategory","lvl","content","className"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAE5B,MAAMC,UAAU,GAAGJ,MAAM,EAAzB;AACA,MAAMK,WAAW,GAAGL,MAAM,EAA1B;AAEA,MAAMM,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,IAAjB,EAAuBC,GAAvB,CAA2B,UAACC,MAAD,EAAY;AACnD,WAAO;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,MAAA,KAAK,EAAED,MAAM,CAACE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFe,CAAhB;;AAIA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,QAAIC,KAAK,GAAGV,WAAW,CAACW,OAAZ,CAAoBD,KAAhC;AACAR,IAAAA,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,IAAjB,EAAuBC,GAAvB,CAA2B,UAACC,MAAD,EAAY;AACnC,UAAIA,MAAM,CAACE,IAAP,IAAeE,KAAnB,EAA0B;AACtBZ,QAAAA,KAAK,CAACc,WAAN,CAAkBN,MAAM,CAACC,EAAzB,EAA6BD,MAAM,CAACI,KAApC,EAA2CZ,KAAK,CAACe,GAAjD;AACH;AACJ,KAJD;AAKH,GAPD;;AASA,MAAIC,OAAO,GACP;AAAK,IAAA,SAAS,EAAEhB,KAAK,CAACiB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,yFAAjB;AAA2G,IAAA,GAAG,EAAEf,WAAhH;AAA6H,IAAA,IAAI,EAAC,MAAlI;AAAyI,IAAA,QAAQ,EAAES,SAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAU,IAAA,EAAE,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,OADL,CAFJ,CADJ,CADJ;;AAWA,SAAOa,OAAP;AACH,CA9BD;;AAgCA,eAAejB,cAAf","sourcesContent":["import React, { useRef } from 'react'\r\nimport useSWR from 'swr'\r\n\r\nconst SelectCategory = props => {\r\n\r\n    const optionsRef = useRef()\r\n    const selectedRef = useRef()\r\n\r\n    const options = JSON.parse(props.data).map((option) => {\r\n        return <option key={option.id} value={option.name} />\r\n    })\r\n\r\n    const getOption = () => {\r\n        let value = selectedRef.current.value\r\n        JSON.parse(props.data).map((option) => {\r\n            if (option.name == value) {\r\n                props.setCategory(option.id, option.value, props.lvl)\r\n            }\r\n        })\r\n    }\r\n\r\n    let content = (\r\n        <div className={props.className}>\r\n            <div className=\"border border-1 p-1\">\r\n                <input className=\"font-sans font-medium text-gray-700 leading-tight hover:outline-none focus:outline-none\" ref={selectedRef} list=\"data\" onChange={getOption} />\r\n                <datalist id=\"data\">\r\n                    {options}\r\n                </datalist>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default SelectCategory"]},"metadata":{},"sourceType":"module"}