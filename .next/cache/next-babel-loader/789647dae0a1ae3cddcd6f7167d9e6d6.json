{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport querystring from 'querystring';\nexport function checkUser(csrttoken) {\n  var axiosConfig, content;\n  return _regeneratorRuntime.async(function checkUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          axiosConfig = {\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n              'X-CSRFToken': csrttoken\n            }\n          };\n          content = {\n            data: null\n          };\n          axios.defaults.withCredentials = true;\n          axios.post(process.env.domain + '/api/users/', querystring.stringify(content), axiosConfig).then(function (response) {\n            return response;\n          })[\"catch\"](function (error) {\n            return null;\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/services/authentication/checkUser.js"],"names":["axios","querystring","checkUser","csrttoken","axiosConfig","headers","content","data","defaults","withCredentials","post","process","env","domain","stringify","then","response","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,OAAO,SAAeC,SAAf,CAAyBC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACKC,UAAAA,WADL,GACmB;AACdC,YAAAA,OAAO,EAAE;AACL,8BAAgB,mCADX;AAEL,6BAAeF;AAFV;AADK,WADnB;AAOKG,UAAAA,OAPL,GAOe;AACVC,YAAAA,IAAI,EAAE;AADI,WAPf;AAUCP,UAAAA,KAAK,CAACQ,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACAT,UAAAA,KAAK,CAACU,IAAN,CAAWC,OAAO,CAACC,GAAR,CAAYC,MAAZ,GAAqB,aAAhC,EAA+CZ,WAAW,CAACa,SAAZ,CAAsBR,OAAtB,CAA/C,EAA+EF,WAA/E,EACKW,IADL,CACU,UAACC,QAAD,EAAc;AAChB,mBAAOA,QAAP;AACH,WAHL,WAIW,UAACC,KAAD,EAAW;AACd,mBAAO,IAAP;AACH,WANL;;AAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios'\r\nimport querystring from 'querystring'\r\n\r\nexport async function checkUser(csrttoken) {\r\n        let axiosConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'X-CSRFToken': csrttoken\r\n            }\r\n        }\r\n        let content = {\r\n            data: null\r\n        }\r\n        axios.defaults.withCredentials = true\r\n        axios.post(process.env.domain + '/api/users/', querystring.stringify(content), axiosConfig)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                return null\r\n            })\r\n}"]},"metadata":{},"sourceType":"module"}