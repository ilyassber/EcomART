{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\widgets\\\\article\\\\AddText.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\n\nconst AddText = props => {\n  const inputRef = useRef(null);\n  let text = \"\";\n\n  let saveBtn = __jsx(\"div\", {\n    className: \"h-auto w-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"h-auto w-auto flex flex-wrap text-center bg-white bg-opacity-50 border border-1 border-gray-900 hover:bg-opacity-75\",\n    role: \"button\",\n    onClick: () => {\n      let data = {\n        state: \"valid\",\n        data: {\n          type: \"text\",\n          text: text\n        }\n      };\n      props.editContent(props.index, data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"text-center h-auto w-auto m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"Save Text\")));\n\n  let editBtn = __jsx(\"div\", {\n    className: \"h-auto w-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"h-auto w-auto flex flex-wrap text-center bg-white bg-opacity-50 border border-1 border-gray-900 hover:bg-opacity-75\",\n    role: \"button\",\n    onClick: () => {\n      let data = {\n        state: \"edit\",\n        data: {\n          type: \"text\",\n          text: props.data.data.text\n        }\n      };\n      props.editContent(props.index, data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"text-center h-auto w-auto m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Edit Text\")));\n\n  useEffect(() => {\n    if (props.data.state == \"edit\") {\n      inputRef.current.value = props.data.data.text;\n    }\n  }, []);\n\n  let content = __jsx(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"relative h-auto w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, props.data.state == \"valid\" ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }\n  }, props.data.data.text)) : __jsx(\"textarea\", {\n    ref: inputRef,\n    rows: \"4\",\n    cols: \"50\",\n    className: \"appearance-none border w-full h-12 py-2 px-3 font-sans font-medium text-gray-700 leading-tight focus:outline-none focus:border-black\",\n    type: \"text\",\n    onChange: e => {\n      text = e.target.value;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: \"absolute top-0 right-0 container flex content-center flex-wrap text-center h-6 w-6 bg-opacity-50 bg-gray-700 rounded-full hover:bg-gray-900 focus:outline-none m-1\",\n    role: \"button\",\n    onClick: () => props.removeContent(props.index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"text-center font-sans font-bold text-xw-100 h-auto w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"x\"))), __jsx(\"div\", {\n    className: \"w-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, props.data.state == 'valid' ? editBtn : saveBtn));\n\n  return content;\n};\n\nexport default AddText;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/widgets/article/AddText.js"],"names":["React","useRef","useEffect","AddText","props","inputRef","text","saveBtn","data","state","type","editContent","index","editBtn","current","value","content","className","e","target","removeContent"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\nconst AddText = props => {\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    let text = \"\"\r\n\r\n    let saveBtn = (\r\n        <div className=\"h-auto w-auto\">\r\n            <div\r\n                className=\"h-auto w-auto flex flex-wrap text-center bg-white bg-opacity-50 border border-1 border-gray-900 hover:bg-opacity-75\"\r\n                role=\"button\"\r\n                onClick={() => {\r\n                    let data = {\r\n                        state: \"valid\",\r\n                        data: {\r\n                            type: \"text\",\r\n                            text: text\r\n                        }\r\n                    }\r\n                    props.editContent(props.index, data)\r\n                }}>\r\n                <span className=\"text-center h-auto w-auto m-1\">\r\n                    Save Text\r\n                    </span>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    let editBtn = (\r\n        <div className=\"h-auto w-auto\">\r\n            <div\r\n                className=\"h-auto w-auto flex flex-wrap text-center bg-white bg-opacity-50 border border-1 border-gray-900 hover:bg-opacity-75\"\r\n                role=\"button\"\r\n                onClick={() => {\r\n                    let data = {\r\n                        state: \"edit\",\r\n                        data: {\r\n                            type: \"text\",\r\n                            text: props.data.data.text\r\n                        }\r\n                    }\r\n                    props.editContent(props.index, data)\r\n                }}>\r\n                <span className=\"text-center h-auto w-auto m-1\">\r\n                    Edit Text\r\n                    </span>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (props.data.state == \"edit\") {\r\n            inputRef.current.value = props.data.data.text\r\n        }\r\n    }, [])\r\n\r\n    let content = (\r\n        <div className={props.className}>\r\n            <div className=\"relative h-auto w-full\">\r\n                {(props.data.state == \"valid\") ? (\r\n                    <div><p>{props.data.data.text}</p></div>\r\n                ) : (\r\n                        <textarea\r\n                            ref={inputRef}\r\n                            rows=\"4\" cols=\"50\"\r\n                            className=\"appearance-none border w-full h-12 py-2 px-3 font-sans font-medium text-gray-700 leading-tight focus:outline-none focus:border-black\"\r\n                            type=\"text\"\r\n                            onChange={(e) => { text = e.target.value }}\r\n                        />)}\r\n                <div\r\n                    className=\"absolute top-0 right-0 container flex content-center flex-wrap text-center h-6 w-6 bg-opacity-50 bg-gray-700 rounded-full hover:bg-gray-900 focus:outline-none m-1\"\r\n                    role=\"button\"\r\n                    onClick={() => props.removeContent(props.index)}>\r\n                    <span className=\"text-center font-sans font-bold text-xw-100 h-auto w-full\">\r\n                        x\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className=\"w-auto\">\r\n                {(props.data.state == 'valid') ? editBtn : saveBtn}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default AddText"]},"metadata":{},"sourceType":"module"}