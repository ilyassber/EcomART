{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { parseCookies } from '../../lib/parseCookies';\nimport { Navbar, SideBar, WelcomeBar } from '../../components/elements/bar';\nimport { ProductGrid } from '../../components/widgets/product';\nimport ProductGridList from '../../components/elements/list/ProductGridList';\nimport { AddProduct } from '../../components/elements/product';\nimport AddArticle from '../../components/elements/article/AddArticle';\nimport ArticleList from '../../components/elements/list/ArticleList';\nimport { getRequest } from '../../services/api/get/getRequest';\nimport { postRequest } from '../../services/api/post/postRequest';\nimport ArticleBanner from '../../components/widgets/article/ArticleBanner';\nimport querystring from 'querystring';\n\nvar UserPage = function UserPage(props) {\n  var _useState = useState({\n    products: null,\n    articles: null\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(0),\n      clikced = _useState3[0],\n      setClicked = _useState3[1];\n\n  useEffect(function () {\n    var user = localStorage.getItem('_user');\n    console.log(user);\n    setIsLoading(true);\n\n    if (props.cookies.utoken != null) {\n      getRequest(process.env.domain + '/api/products/').then(function (res) {\n        var products = res; //setData({...data , products: JSON.stringify(res)});\n        //setIsLoading(false);\n\n        postRequest(querystring.stringify({\n          operation: \"all\"\n        }), props.cookies['csrftoken'], process.env.domain + '/api/articles/').then(function (res) {\n          setData({\n            products: JSON.stringify(products),\n            articles: JSON.stringify(res)\n          });\n          setIsLoading(false);\n        });\n      });\n    } else {\n      window.location = '/maker/auth';\n    }\n  }, []);\n\n  var content = __jsx(\"p\", null, \"Loading characters...\");\n\n  if (!isLoading) {\n    var productsList = data.products ? JSON.parse(data.products).map(function (product) {\n      return __jsx(ProductGrid, {\n        className: \"h-auto w-auto m-2\",\n        key: product.id,\n        data: product,\n        owner: \"ilyass\"\n      });\n    }) : null;\n    var articlesList = data.articles ? JSON.parse(data.articles).map(function (article) {\n      localStorage.setItem(article.url, JSON.stringify(article));\n      return __jsx(ArticleBanner, {\n        className: \"h-auto w-full max-w-screen-md m-4\",\n        key: article.id,\n        data: article\n      });\n    }) : null;\n    var sideBarData = [{\n      id: 0,\n      value: 'Products'\n    }, {\n      id: 1,\n      value: 'Stories'\n    }, {\n      id: 2,\n      value: 'Add Product'\n    }, {\n      id: 3,\n      value: 'Add Story'\n    }];\n\n    var comp1 = __jsx(ProductGridList, {\n      className: \"p-2\",\n      data: productsList\n    });\n\n    var comp2 = __jsx(ArticleList, {\n      className: \"p-2\",\n      data: articlesList\n    });\n\n    var comp3 = __jsx(AddProduct, {\n      className: \"p-2\",\n      cookies: props.cookies\n    });\n\n    var comp4 = __jsx(AddArticle, {\n      className: \"p-2\",\n      cookies: props.cookies\n    });\n\n    var componentsList = [comp1, comp2, comp3, comp4];\n    content = __jsx(\"div\", {\n      className: \"w-full\"\n    }, __jsx(Navbar, {\n      cookies: props.cookies,\n      className: \"w-full\"\n    }), __jsx(WelcomeBar, {\n      className: \"pt-12\"\n    }), __jsx(\"div\", {\n      className: \"w-full flex pt-10\"\n    }, __jsx(\"div\", {\n      className: \"w-64 h-full\"\n    }, __jsx(SideBar, {\n      className: \"w-full h-full\",\n      clicked: clikced,\n      data: sideBarData,\n      onClick: function onClick(x) {\n        return setClicked(x);\n      }\n    })), __jsx(\"div\", {\n      className: \"w-full h-full\"\n    }, componentsList[clikced])));\n  } else if (!isLoading && (!data || data.length === 0)) {\n    content = __jsx(\"p\", null, \"Could not fetch any data.\");\n  }\n\n  return content;\n};\n\nUserPage.getInitialProps = function _callee(_ref) {\n  var req, cookies;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req;\n          cookies = parseCookies(req);\n          return _context.abrupt(\"return\", {\n            cookies: cookies,\n            data: req.data\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default UserPage;","map":null,"metadata":{},"sourceType":"module"}