{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\graphics\\\\textFields\\\\TxtArea.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst TxtArea = props => {\n  let align = 'left';\n  let color = 'gray-900';\n  let borderColor = 'gray-300';\n  let textColor = 'gray-700';\n  let focusColor = 'black';\n  let placeholder = '';\n  let height = 12;\n  let shadow = 'border border-';\n\n  if (props.align != null) {\n    align = props.align;\n  }\n\n  if (props.color != null) {\n    color = props.color;\n  }\n\n  if (props.height != null) {\n    height = props.height;\n  }\n\n  if (props.borderColor != null) {\n    borderColor = props.borderColor;\n  }\n\n  if (props.textColor != null) {\n    textColor = props.textColor;\n  }\n\n  if (props.focusColor != null) {\n    focusColor = props.focusColor;\n  }\n\n  if (props.error == true) {\n    borderColor = 'red-600';\n    color = 'red-600';\n  }\n\n  if (props.reset == true) {\n    if (props.color != null) {\n      color = props.color;\n    } else {\n      color = 'white';\n    }\n\n    if (props.borderColor != null) {\n      borderColor = props.borderColor;\n    } else {\n      borderColor = 'gray-300';\n    }\n\n    if (props.textColor != null) {\n      textColor = props.textColor;\n    } else {\n      textColor = 'gray-700';\n    }\n\n    inputRef.current.value = '';\n  }\n\n  if (props.placeholder != null) {\n    placeholder = props.placeholder;\n  }\n\n  if (props.shadow == true) {\n    shadow = 'shadow';\n    borderColor = '';\n  }\n\n  let content = __jsx(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, props.label != null ? __jsx(\"label\", {\n    className: 'w-full block mb-1 font-sans font-medium' + ' text-' + color + ' text-' + align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }\n  }, props.label) : null, __jsx(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    className: 'appearance-none ' + shadow + borderColor + ' w-full h-' + height + ' py-2 px-3 font-sans font-medium text-' + textColor + ' leading-tight focus:outline-none focus:border-' + focusColor,\n    type: \"text\",\n    onChange: props.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n\n  return content;\n};\n\nexport default TxtArea;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/graphics/textFields/TxtArea.js"],"names":["TxtArea","props","align","color","borderColor","textColor","focusColor","placeholder","height","shadow","error","reset","inputRef","current","value","content","className","label","onChange"],"mappings":"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","sourcesContent":["const TxtArea = props => {\r\n\r\n    let align = 'left'\r\n    let color = 'gray-900'\r\n    let borderColor = 'gray-300'\r\n    let textColor = 'gray-700'\r\n    let focusColor = 'black'\r\n    let placeholder = ''\r\n    let height = 12\r\n    let shadow = 'border border-'\r\n\r\n    if (props.align != null) {\r\n        align = props.align\r\n    }\r\n\r\n    if (props.color != null) {\r\n        color = props.color\r\n    }\r\n\r\n    if (props.height != null) {\r\n        height = props.height\r\n    }\r\n\r\n    if (props.borderColor != null) {\r\n        borderColor = props.borderColor\r\n    }\r\n\r\n    if (props.textColor != null) {\r\n        textColor = props.textColor\r\n    }\r\n\r\n    if (props.focusColor != null) {\r\n        focusColor = props.focusColor\r\n    }\r\n\r\n    if (props.error == true) {\r\n        borderColor = 'red-600'\r\n        color = 'red-600'\r\n    }\r\n\r\n    if (props.reset == true) {\r\n        if (props.color != null) {\r\n            color = props.color\r\n        } else {\r\n            color = 'white'\r\n        }\r\n        if (props.borderColor != null) {\r\n            borderColor = props.borderColor\r\n        } else {\r\n            borderColor = 'gray-300'\r\n        }\r\n        if (props.textColor != null) {\r\n            textColor = props.textColor\r\n        } else {\r\n            textColor = 'gray-700'\r\n        }\r\n        inputRef.current.value = ''\r\n    }\r\n\r\n    if (props.placeholder != null) {\r\n        placeholder = props.placeholder\r\n    }\r\n\r\n    if (props.shadow == true) {\r\n        shadow = 'shadow'\r\n        borderColor = ''\r\n    }\r\n\r\n    let content = (\r\n        <div className={props.className}>\r\n            {(props.label != null)\r\n            ? (<label className={'w-full block mb-1 font-sans font-medium' + ' text-' + color + ' text-' + align}>{props.label}</label>)\r\n            : null}\r\n            <textarea\r\n                rows=\"4\" cols=\"50\"\r\n                className={'appearance-none ' + shadow + borderColor + ' w-full h-' + height + ' py-2 px-3 font-sans font-medium text-' + textColor + ' leading-tight focus:outline-none focus:border-' + focusColor}\r\n                type=\"text\"\r\n                onChange={props.onChange}\r\n            />\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default TxtArea"]},"metadata":{},"sourceType":"module"}