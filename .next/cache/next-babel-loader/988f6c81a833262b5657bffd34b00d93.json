{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useRef } from 'react';\nimport AlphaDisplayer from '../alpha-displayer/AlphaDisplayer';\nimport SearchWidget from '../../widgets/search/searchWidget';\nimport { Icon } from 'react-icons-kit';\nimport { close } from 'react-icons-kit/ikons/close'; // history widget : used inside the history component \n\nfunction NewHistoryItem({\n  title,\n  deleteOneHistory\n}) {\n  const text = useRef(null);\n  return __jsx(\"div\", {\n    className: \"flex flex-row items-center justify-start\"\n  }, __jsx(\"p\", {\n    ref: text,\n    className: \" text-md \"\n  }, title));\n}\n\nexport default function SearchGate({\n  changeOpenSearch,\n  searchData,\n  setSearchData\n}) {\n  const {\n    0: data,\n    1: setData\n  } = useState(_objectSpread({}, searchData, {}, {\n    inputFocus: true\n  })); // searchGate data --> check searchData state in \"layout.js\"\n  // STATE CALLBACKS\n  // turn search input focus OFF\n\n  const InputFocusOff = () => {\n    setData(_objectSpread({}, data, {\n      inputFocus: false\n    }));\n  }; // submit new target to search for + add to search history + turn off input focus\n\n\n  const changeSearchTarget = searchTarget => {\n    if (searchTarget !== \"\") {\n      setData(_objectSpread({}, data, {\n        searchTarget: searchTarget\n      }));\n      addSearchHistoryItem(searchTarget);\n      InputFocusOff();\n    }\n  }; // track text on search input  \"not used for now\" \n\n\n  const updateTrackInputText = trackedInputText => {\n    if (trackedInputText !== \"\") setData(_objectSpread({}, data, {\n      searchTrackedInputText: trackedInputText\n    }));\n  }; // add item to search history\n\n\n  const addSearchHistoryItem = historyItem => {\n    if (historyItem !== \"\") {\n      let newSearchHistory = data.searchHistory;\n      newSearchHistory.push(historyItem);\n      setData(_objectSpread({}, data, {\n        searchHistory: newSearchHistory\n      }));\n    }\n  }; // delete item from search history\n\n\n  const deleteSearchHistoryItem = historyItem => {\n    let newSearchHistory = [];\n    data.searchHistory.forEach(item => {\n      if (item !== historyItem) newSearchHistory.push(item);\n    });\n    setData(_objectSpread({}, data, {\n      searchHistory: newSearchHistory\n    }));\n  }; // clear search history\n\n\n  const clearSearchHistory = () => {\n    setData(_objectSpread({}, data, {\n      searchHistory: []\n    }));\n  }; // saves search data and exit -> updates searchData state in \"layout.js\" \n\n\n  const UpdateAndExit = () => {\n    setSearchData(data);\n    changeOpenSearch();\n  }; // UTILITIES\n  // close icon\n\n\n  const CloseIcon = () => __jsx(Icon, {\n    className: \"cursor-pointer text-gray-600 hover:text-gray-700\",\n    onClick: UpdateAndExit,\n    size: 40,\n    icon: close\n  }); // history search component\n\n\n  const RecentSearchCard = ({\n    style,\n    maxResultNumber\n  }) => __jsx(\"div\", {\n    className: style\n  }, __jsx(\"h2\", {\n    className: \"font-bold text-lg text-gray-900 font-kumbhsans my-2  whitespace-no-wrap\"\n  }, \"Recent Search\"), __jsx(\"ul\", {\n    className: \"w-full flex flex-col justify-start\"\n  }, data.searchHistory.map((item, indx) => indx < maxResultNumber && __jsx(\"li\", {\n    key: indx,\n    className: \"cursor-pointer whitespace-no-wrap text-md hover:underline\"\n  }, __jsx(NewHistoryItem, {\n    title: item,\n    deleteOneHistory: deleteSearchHistoryItem\n  })))), data.searchHistory.length > 0 && __jsx(\"label\", {\n    className: \" text-sm text-gray-600 hover:text-gray-900 whitespace-no-wrap cursor-pointer my-2\",\n    onClick: clearSearchHistory\n  }, \"Delete History\"), \"        \");\n\n  const AnnouceCard = ({\n    style,\n    cardTitle,\n    titleLinks\n  }) => __jsx(\"div\", {\n    className: style\n  }, __jsx(\"h2\", {\n    className: \"font-bold text-lg text-gray-900 font-kumbhsans my-2  whitespace-no-wrap\"\n  }, cardTitle), __jsx(\"ul\", {\n    className: \"flex flex-col justify-start\"\n  }, titleLinks.map((title, indx) => __jsx(\"li\", {\n    key: indx,\n    className: \"cursor-pointer whitespace-no-wrap text-md hover:underline text-justify\"\n  }, title)))); // left part\n\n\n  const LeftContentCard = ({\n    style\n  }) => __jsx(\"div\", {\n    className: style\n  }, __jsx(RecentSearchCard, {\n    style: \"w-full flex flex-col items-start cursor-default\",\n    maxResultNumber: 8\n  }), __jsx(AnnouceCard, {\n    style: \"w-full flex flex-col items-start mt-8 cursor-default\",\n    cardTitle: \"Products\",\n    titleLinks: [\"Leatest products\", \"Best selling products\", \"Season products\"]\n  }), __jsx(AnnouceCard, {\n    style: \"w-full flex flex-col items-start mt-8 cursor-default\",\n    cardTitle: \"Stories\",\n    titleLinks: [\"every stitch.. stitched with love\", \"braid from atlas mountains\", \"desert music\"]\n  })); // default content displayed in case there is no word to search for  \n\n\n  const DefaultContentCard = () => __jsx(\"div\", {\n    className: \"flex flex-row justify-start items-start mt-16 w-full\"\n  }, __jsx(LeftContentCard, {\n    style: \"flex flex-col justify-center w-4/12 px-4 \"\n  }), __jsx(\"div\", {\n    className: \"flex flex-row justify-start w-8/12 h-full \"\n  }, __jsx(\"div\", {\n    className: \"flex flex-col justify-start items-start w-2/12\"\n  }), __jsx(\"div\", {\n    className: \"flex flex-col justify-start items-start w-10/12\"\n  }, __jsx(AlphaDisplayer, {\n    image: \"images/Articles/cover-04.jpg\",\n    title: \"The Lovely Place\",\n    description: \"have u ever been in a place where .. .\",\n    buttonText: \"\",\n    clickAction: () => console.log(\" SHIT CLICKED \")\n  })))); // content displayed to show search result\n\n\n  const ResultContentCard = () => __jsx(\"div\", {\n    className: \"flex flex-col md:flex-row justify-start md:justify-center items-center md:items-start mt-16 w-full h-180 \"\n  }, __jsx(\"div\", {\n    className: \"flex justify-center w-8/12 h-full \"\n  }, __jsx(\"div\", {\n    className: \"w-5/12\"\n  }, __jsx(AlphaDisplayer, {\n    title: \"\",\n    description: \"\",\n    buttonText: \"\",\n    image: \"images/Articles/cover-5.jpg\"\n  })))); // the entire default search displayed\n\n\n  const DefaultBody = () => __jsx(\"div\", {\n    className: \"flex flex-col items-center justify-start w-9/12\"\n  }, __jsx(SearchWidget, {\n    style: \"w-full h-12 mt-4\",\n    clickHandler: changeSearchTarget,\n    inputFocus: data.inputFocus\n  }), __jsx(DefaultContentCard, null)); // the entire search result displayed\n\n\n  const ResultBody = () => __jsx(\"div\", {\n    className: \"flex flex-col items-center justify-start w-10/12 bg-white\"\n  }, __jsx(SearchWidget, {\n    style: \"w-full h-12 my-0 bg-white \",\n    clickHandler: submitInputText,\n    inputFocus: data.inputFocus\n  }), __jsx(ResultContentCard, null)); // CONPONENTS\n  // upper bar : contains exit button\n\n\n  const TopBar = () => __jsx(\"div\", {\n    className: \"flex justify-end w-full p-5 \"\n  }, __jsx(CloseIcon, null)); // search body : switch between search and default mode\n\n\n  const MainBody = () => __jsx(DefaultBody, null) // <SearchResultBody/>\n  ; // RENDER THAT SHIT\n\n\n  return __jsx(\"div\", {\n    className: `z-50 w-full flex flex-col items-center justify-start bg-white`\n  }, __jsx(TopBar, null), __jsx(MainBody, null));\n}","map":null,"metadata":{},"sourceType":"module"}