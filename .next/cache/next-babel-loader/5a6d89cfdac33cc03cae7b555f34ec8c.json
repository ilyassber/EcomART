{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1337\\\\Documents\\\\WorkSpace\\\\ecomart\\\\dev\\\\mormadeWebSite\\\\components\\\\graphics\\\\category\\\\SelectCategory.js\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport useSWR from 'swr';\nimport { getCategories } from '../../../services/api/fetch/getCategories';\n\nconst SelectCategory = props => {\n  const optionsRef = useRef();\n  const selectedRef = useRef();\n  const {\n    data,\n    error\n  } = useSWR('categories', getCategories(props.lvl, props.parent, props.csrftoken));\n  if (!data) return __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 23\n    }\n  }, \"loading ...\");\n  const options = JSON.parse(data).map(option => {\n    return __jsx(\"option\", {\n      key: option.id,\n      value: option.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }\n    });\n  });\n\n  const getOption = () => {\n    let value = selectedRef.current.value;\n    JSON.parse(data).map(option => {\n      if (option.name == value) {\n        props.setCategory(option.id, option.value, props.lvl);\n      }\n    });\n  };\n\n  let content = __jsx(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"border border-1 p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"font-sans font-medium text-gray-700 leading-tight hover:outline-none focus:outline-none\",\n    ref: selectedRef,\n    list: \"data\",\n    onChange: getOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), __jsx(\"datalist\", {\n    id: \"data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, options)));\n\n  return content;\n};\n\nexport default SelectCategory;","map":{"version":3,"sources":["C:/Users/1337/Documents/WorkSpace/ecomart/dev/mormadeWebSite/components/graphics/category/SelectCategory.js"],"names":["React","useRef","useSWR","getCategories","SelectCategory","props","optionsRef","selectedRef","data","error","lvl","parent","csrftoken","options","JSON","parse","map","option","id","name","getOption","value","current","setCategory","content","className"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,aAAT,QAA8B,2CAA9B;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAE5B,QAAMC,UAAU,GAAGL,MAAM,EAAzB;AACA,QAAMM,WAAW,GAAGN,MAAM,EAA1B;AAEA,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBP,MAAM,CAAC,YAAD,EAAeC,aAAa,CAACE,KAAK,CAACK,GAAP,EAAYL,KAAK,CAACM,MAAlB,EAA0BN,KAAK,CAACO,SAAhC,CAA5B,CAA9B;AAEA,MAAI,CAACJ,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAEX,QAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWP,IAAX,EAAiBQ,GAAjB,CAAsBC,MAAD,IAAY;AAC7C,WAAO;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,MAAA,KAAK,EAAED,MAAM,CAACE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFe,CAAhB;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIC,KAAK,GAAGd,WAAW,CAACe,OAAZ,CAAoBD,KAAhC;AACAP,IAAAA,IAAI,CAACC,KAAL,CAAWP,IAAX,EAAiBQ,GAAjB,CAAsBC,MAAD,IAAY;AAC7B,UAAIA,MAAM,CAACE,IAAP,IAAeE,KAAnB,EAA0B;AACtBhB,QAAAA,KAAK,CAACkB,WAAN,CAAkBN,MAAM,CAACC,EAAzB,EAA6BD,MAAM,CAACI,KAApC,EAA2ChB,KAAK,CAACK,GAAjD;AACH;AACJ,KAJD;AAKH,GAPD;;AASA,MAAIc,OAAO,GACP;AAAK,IAAA,SAAS,EAAEnB,KAAK,CAACoB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,yFAAjB;AAA2G,IAAA,GAAG,EAAElB,WAAhH;AAA6H,IAAA,IAAI,EAAC,MAAlI;AAAyI,IAAA,QAAQ,EAAEa,SAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAU,IAAA,EAAE,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,OADL,CAFJ,CADJ,CADJ;;AAWA,SAAOW,OAAP;AACH,CAlCD;;AAoCA,eAAepB,cAAf","sourcesContent":["import React, { useRef } from 'react'\r\nimport useSWR from 'swr'\r\nimport { getCategories } from '../../../services/api/fetch/getCategories'\r\n\r\nconst SelectCategory = props => {\r\n\r\n    const optionsRef = useRef()\r\n    const selectedRef = useRef()\r\n\r\n    const { data, error } = useSWR('categories', getCategories(props.lvl, props.parent, props.csrftoken))\r\n\r\n    if (!data) return <h3>loading ...</h3>\r\n\r\n    const options = JSON.parse(data).map((option) => {\r\n        return <option key={option.id} value={option.name} />\r\n    })\r\n\r\n    const getOption = () => {\r\n        let value = selectedRef.current.value\r\n        JSON.parse(data).map((option) => {\r\n            if (option.name == value) {\r\n                props.setCategory(option.id, option.value, props.lvl)\r\n            }\r\n        })\r\n    }\r\n\r\n    let content = (\r\n        <div className={props.className}>\r\n            <div className=\"border border-1 p-1\">\r\n                <input className=\"font-sans font-medium text-gray-700 leading-tight hover:outline-none focus:outline-none\" ref={selectedRef} list=\"data\" onChange={getOption} />\r\n                <datalist id=\"data\">\r\n                    {options}\r\n                </datalist>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default SelectCategory"]},"metadata":{},"sourceType":"module"}